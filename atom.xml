<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://blog.kuranado.com</id>
    <title>KURANADO</title>
    <updated>2020-10-06T03:41:14.423Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="http://blog.kuranado.com"/>
    <link rel="self" href="http://blog.kuranado.com/atom.xml"/>
    <subtitle>笔记/博客</subtitle>
    <logo>http://blog.kuranado.com/images/avatar.png</logo>
    <icon>http://blog.kuranado.com/favicon.ico</icon>
    <rights>All rights reserved 2020, KURANADO</rights>
    <entry>
        <title type="html"><![CDATA[CSS 字体图标.md]]></title>
        <id>http://blog.kuranado.com/post/css-zi-ti-tu-biao-md/</id>
        <link href="http://blog.kuranado.com/post/css-zi-ti-tu-biao-md/">
        </link>
        <updated>2020-10-06T03:38:37.000Z</updated>
        <content type="html"><![CDATA[<p>[TOC]</p>
<h2 id="常用字体图标网站">常用字体图标网站</h2>
<ul>
<li><a href="https://icomoon.io/app/#/select">icomoon.io</a></li>
<li><a href="https://www.iconfont.cn/">iconfont.cn</a></li>
</ul>
<h2 id="字体图标格式">字体图标格式</h2>
<p>为了兼容性而存在 .ttf/.woff/.eot/.svg 字体</p>
<h2 id="字体图标的引入">字体图标的引入</h2>
<p>以 icomoon 举例：</p>
<ol>
<li>进入 <a href="https://icomoon.io/app/#/select">icomoon.io</a>，选择字体后下载，解压如下：<br>
<img src="http://image.kuranado.com/blog/1601955553.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></li>
<li>把下载包中的 fonts 文件夹放入页面根目录下</li>
<li>在 CSS 样式中全局声明字体：简单理解就是将字体文件通过 CSS 引入到我们的页面中，一定要注意文件路径是否正确，把下面这段代码（可从下载包中的 style.css 得到）复制到 CSS 文件中</li>
</ol>
<pre><code>/** 字体声明 **/
@font-face {
  font-family: 'icomoon';
  src: url('fonts/icomoon.eot?bypbup');
  src: url('fonts/icomoon.eot?bypbup#iefix') format('embedded-opentype'),
    url('fonts/icomoon.ttf?bypbup') format('truetype'),
    url('fonts/icomoon.woff?bypbup') format('woff'),
    url('fonts/icomoon.svg?bypbup#icomoon') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: block;
}
</code></pre>
<ol start="4">
<li>打开下载包中的 demo.html，复制需要的图标到代码中<br>
<img src="http://image.kuranado.com/blog/1601955565.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></li>
</ol>
<pre><code>/** 字体声明 **/
@font-face {
    font-family: 'icomoon';
    src: url('fonts/icomoon.eot?bypbup');
    src: url('fonts/icomoon.eot?bypbup#iefix') format('embedded-opentype'),
        url('fonts/icomoon.ttf?bypbup') format('truetype'),
        url('fonts/icomoon.woff?bypbup') format('woff'),
        url('fonts/icomoon.svg?bypbup#icomoon') format('svg');
    font-weight: normal;
    font-style: normal;
    font-display: block;
}
span {
    /** 指定字体为 icomoon **/
    font-family: 'icomoon';
    /** 既然是图标是字体，当然也可以为其设置字体的相关属性 **/
    color: skyblue;
    font-size: 16px;
}
&lt;body&gt;
    &lt;!-- 虽然下面的图标看起来好像一样，但其实是不一样的，如果是在 CSS3 中，使用伪元素选择器 ::after/::before，content 中都可以使用转义图标，如 content: '\e905' 将同样会显示正确的图标 --&gt;
    &lt;span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;/span&gt;
&lt;/body&gt;
</code></pre>
<figure data-type="image" tabindex="1"><img src="http://image.kuranado.com/blog/1601955574.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h2 id="字体图标的追加">字体图标的追加</h2>
<p>如果项目中想要在原来的基础上引入新的字体图标，可进入 <a href="https://icomoon.io/app/#/select">icomoon.io</a>，导入原来字体包的 selection.json 文件<br>
<img src="http://image.kuranado.com/blog/1601955593.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
这时 icomoon 就会加载出我们以前下载的图标<br>
<img src="http://image.kuranado.com/blog/1601955602.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
之后在此基础上选择其他想要的新图标，选完后下载字体包，解压，将 fonts 文件夹复制到页面根目录下，替换原先的 fonts 文件夹即可（替换文件夹，需把旧文件夹删掉，然后把新文件夹复制进去即可，以完成彻底替换，否则字体可能会不生效）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac - Hammerspoon.md]]></title>
        <id>http://blog.kuranado.com/post/mac-hammerspoonmd/</id>
        <link href="http://blog.kuranado.com/post/mac-hammerspoonmd/">
        </link>
        <updated>2020-10-06T01:50:03.000Z</updated>
        <summary type="html"><![CDATA[<p>最近在<a href="https://mrdear.cn/posts/osx_app_switcher.html">学长博客</a>中发现一个非常好玩的效率软件：<a href="http://www.hammerspoon.org/">Hammerspoon</a>，通过编写 Lua 脚本，完成各种有趣的小功能</p>
]]></summary>
        <content type="html"><![CDATA[<p>最近在<a href="https://mrdear.cn/posts/osx_app_switcher.html">学长博客</a>中发现一个非常好玩的效率软件：<a href="http://www.hammerspoon.org/">Hammerspoon</a>，通过编写 Lua 脚本，完成各种有趣的小功能</p>
<!-- more -->
<p>[TOC]</p>
<h2 id="hammerspoon-作用">Hammerspoon 作用</h2>
<ul>
<li>替代 Magnet 进行窗口移动<br>
之前一直用 Magnet 移动窗口，使用 Hammerspoon 之后完全可以替代 Magnet，以下为 Magnet 横屏和竖屏分别支持的快捷键截图<br>
横屏：<br>
<img src="http://image.kuranado.com/blog/1601949462.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
竖屏：<br>
<img src="http://image.kuranado.com/blog/1601949470.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></li>
<li>为应用配置快捷键，比 ⌘⇥ 和 Alfred 切换程序更高效（建议只为高频使用的一些软件分配快捷键）</li>
</ul>
<h2 id="个人配置快捷键列表">个人配置快捷键列表</h2>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>⌃⌥←</td>
<td>左半屏</td>
</tr>
<tr>
<td>⌃⌥→</td>
<td>右半屏</td>
</tr>
<tr>
<td>⌃⌥↑</td>
<td>上半屏</td>
</tr>
<tr>
<td>⌃⌥↓</td>
<td>下半屏</td>
</tr>
<tr>
<td>⌃⌥D</td>
<td>左 1/3（横屏）或上 1/3（竖屏）</td>
</tr>
<tr>
<td>⌃⌥F</td>
<td>中 1/3</td>
</tr>
<tr>
<td>⌃⌥G</td>
<td>右 1/3（横屏）或下 1/3（竖屏）</td>
</tr>
<tr>
<td>⌃⌥E</td>
<td>左 2/3（横屏）或上 2/3（竖屏）</td>
</tr>
<tr>
<td>⌃⌥T</td>
<td>右 2/3（横屏）或下 2/3（竖屏）</td>
</tr>
<tr>
<td>⌃⌥C</td>
<td>居中</td>
</tr>
<tr>
<td>⌃⌥=</td>
<td>等比例放大窗口</td>
</tr>
<tr>
<td>⌃⌥-</td>
<td>等比例缩小窗口</td>
</tr>
<tr>
<td>⌃⌥↩︎</td>
<td>最大化</td>
</tr>
<tr>
<td>⌃⌥⌘←</td>
<td>窗口由主屏移动到副屏</td>
</tr>
<tr>
<td>⌃⌥⌘→</td>
<td>窗口由副屏移动到主屏</td>
</tr>
<tr>
<td>⌥Q</td>
<td>打开 QQ</td>
</tr>
<tr>
<td>⌥W</td>
<td>打开 WeChat</td>
</tr>
<tr>
<td>⌥V</td>
<td>打开 Visual Studio Code</td>
</tr>
<tr>
<td>⌥F</td>
<td>打开 Finder</td>
</tr>
<tr>
<td>⌥C</td>
<td>打开 Chrome</td>
</tr>
<tr>
<td>⌥J</td>
<td>打开 Intellij IDEA</td>
</tr>
<tr>
<td>⌥N</td>
<td>打开 WizNote</td>
</tr>
<tr>
<td>⌥G</td>
<td>打开 Gridea</td>
</tr>
<tr>
<td>⌥D</td>
<td>打开 DataGrip</td>
</tr>
<tr>
<td>⌥T</td>
<td>打开 iTerm2</td>
</tr>
<tr>
<td>⌥M</td>
<td>打开 MailMaster</td>
</tr>
<tr>
<td>⌥P</td>
<td>打开 Postman</td>
</tr>
</tbody>
</table>
<h2 id="个人配置文件">个人配置文件</h2>
<p>以下个人具体配置：<br>
<code>~/.hammerspoon/init.lua</code>：</p>
<pre><code>
-- Reload config when the file changes
function reloadConfig(files)
    doReload = false
    for _,file in pairs(files) do
        if file:sub(-4) == &quot;.lua&quot; then
            doReload = true
        end
    end
    if doReload then
        hs.reload()
    end
end
myWatcher = hs.pathwatcher.new(os.getenv(&quot;HOME&quot;) .. &quot;/.hammerspoon/&quot;, reloadConfig):start()
hs.alert.show(&quot;Config loaded&quot;)

-- 设置显示器（显示器名称可通过在 Hammerspoon Console 控制台中输入 hs.screen.allScreens()[1]:name() 和 hs.screen.allScreens()[2]:name() 得到，更多显示器依次类推）
-- 设置主显示器
local main_monitor = &quot;DELL U2718Q&quot;
-- 设置副显示器
local second_monitor = &quot;U2790B&quot;

-- 关闭动画持续时间
hs.window.animationDuration = 0

-- 窗口移动
-- 左半屏
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;Left&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x
    f.y = max.y
    f.w = max.w / 2
    f.h = max.h
    win:setFrame(f)
end)

-- 右半屏
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;Right&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x + (max.w / 2)
    f.y = max.y
    f.w = max.w / 2
    f.h = max.h
    win:setFrame(f)
end)

-- 上半屏
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;Up&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x
    f.y = max.y
    f.w = max.w
    f.h = max.h / 2
    win:setFrame(f)
end)

-- 下半屏
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;Down&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x
    f.y = max.y + (max.h / 2)
    f.w = max.w
    f.h = max.h / 2
    win:setFrame(f)
end)

-- 左上角
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;U&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x
    f.y = max.y
    f.w = max.w / 2
    f.h = max.h / 2
    win:setFrame(f)
end)

-- 右上角
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;I&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x + (max.w / 2)
    f.y = max.y
    f.w = max.w / 2
    f.h = max.h / 2
    win:setFrame(f)
end)

-- 左下角
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;J&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x
    f.y = max.y + (max.h / 2)
    f.w = max.w / 2
    f.h = max.h / 2
    win:setFrame(f)
end)

-- 右下角
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;K&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x + (max.w / 2)
    f.y = max.y + (max.h / 2)
    f.w = max.w / 2
    f.h = max.h / 2
    win:setFrame(f)
end)

-- 左 1/3（横屏）或上 1/3（竖屏）
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;D&quot;, function()
    -- 获取当前窗口所在屏幕
    screen = hs.screen.mainScreen()
    max = screen:frame()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    -- 如果为竖屏
    if (isVerticalScreen(screen)) then
        f.x = max.x
        f.y = max.y
        f.w = max.w
        f.h = max.h / 3
        -- 如果为横屏
    else
        f.x = max.x
        f.y = max.y
        f.w = max.w / 3
        f.h = max.h
    end
    win:setFrame(f)
end)

-- 中 1/3
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;F&quot;, function()
    -- 获取当前窗口所在屏幕
    screen = hs.screen.mainScreen()
    max = screen:frame()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    -- 如果为竖屏
    if (isVerticalScreen(screen)) then
        f.x = max.x
        f.y = max.y + (max.h / 3)
        f.w = max.w
        f.h = max.h / 3
        -- 如果为横屏
    else
        f.x = max.x + (max.w / 3)
        f.y = max.y
        f.w = max.w / 3
        f.h = max.h
    end
    win:setFrame(f)
end)

-- 右 1/3（横屏）或下 1/3（竖屏）
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;G&quot;, function()
    -- 获取当前窗口所在屏幕
    screen = hs.screen.mainScreen()
    max = screen:frame()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    -- 如果为竖屏
    if (isVerticalScreen(screen)) then
        f.x = max.x
        f.y = max.y + (max.h / 3 * 2)
        f.w = max.w
        f.h = max.h / 3
        -- 如果为横屏
    else
        f.x = max.x + (max.w / 3 * 2)
        f.y = max.y
        f.w = max.w / 3
        f.h = max.h
    end
    win:setFrame(f)
end)

-- 左 2/3（横屏）或上 2/3（竖屏）
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;E&quot;, function()
    -- 获取当前窗口所在屏幕
    screen = hs.screen.mainScreen()
    max = screen:frame()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    -- 如果为竖屏
    if (isVerticalScreen(screen)) then
        f.x = max.x
        f.y = max.y
        f.w = max.w
        f.h = max.h / 3 * 2
        -- 如果为横屏
    else
        f.x = max.x
        f.y = max.y
        f.w = max.w / 3 * 2
        f.h = max.h
    end
    win:setFrame(f)
end)

-- 右 2/3（横屏）或下 2/3（竖屏）
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;T&quot;, function()
    -- 获取当前窗口所在屏幕
    screen = hs.screen.mainScreen()
    max = screen:frame()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    -- 如果为竖屏
    if (isVerticalScreen(screen)) then
        f.x = max.x
        f.y = max.y + (max.h / 3)
        f.w = max.w
        f.h = max.h / 3 * 2
        -- 如果为横屏
    else
        f.x = max.x + (max.w / 3)
        f.y = max.y
        f.w = max.w / 3 * 2
        f.h = max.h
    end
    win:setFrame(f)
end)

-- 判断指定屏幕是否为竖屏
function isVerticalScreen(screen)
    if (screen:rotate() == 90 or screen:rotate() == 270) then
        return true
    else
        return false
    end
end

-- 居中
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;C&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.x = max.x + (max.w / 4)
    f.y = max.y + (max.h / 4)
    f.w = max.w / 2
    f.h = max.h / 2
    win:setFrame(f)
end)

-- 等比例放大窗口
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;=&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    local screen = win:screen()
    local max = screen:frame()

    f.w = f.w + 40
    f.h = f.h + 40
    f.x = f.x - 20
    f.y = f.y - 20
    if (f.x &lt; max.x) then
        f.x = max.x
    end
    if (f.y &lt; max.y) then
        f.y = max.y
    end
    if (f.w &gt; max.w) then
        f.w = max.w
    end
    if (f.h &gt; max.h) then
        f.h = max.h
    end
    win:setFrame(f)
end)

-- 等比例缩小窗口
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;-&quot;, function()
    local win = hs.window.focusedWindow()
    local f = win:frame()
    -- local screen = win:screen()
    -- local max = screen:frame()

    -- f.x = max.x + (max.w / 4)
    -- f.y = max.y + (max.h / 4)
    f.w = f.w - 40
    f.h = f.h - 40
    f.x = f.x + 20
    f.y = f.y + 20
    win:setFrame(f)
end)

-- 最大化
hs.hotkey.bind({&quot;alt&quot;, &quot;ctrl&quot;}, &quot;Return&quot;, function()
    local win = hs.window.focusedWindow()
    win:maximize()
end)

-- 主屏副屏之间的窗口移动（适用于主屏物理位置在右，副屏物理位置在左的显示器摆放布局，若不是该布局，则请手动修改下面代码以满足需求）
-- 主屏窗口移动到副屏
hs.hotkey.bind({&quot;cmd&quot;, &quot;alt&quot;, &quot;ctrl&quot;}, &quot;Left&quot;, function()
    local win = hs.window.focusedWindow()
    if (win) then
        win:moveToScreen(second_monitor)
    end
end)

-- 副屏窗口移动到主屏
hs.hotkey.bind({&quot;cmd&quot;, &quot;alt&quot;, &quot;ctrl&quot;}, &quot;Right&quot;, function()
    local win = hs.window.focusedWindow()
    if (win) then
        win:moveToScreen(main_monitor)
    end
end)

-- 应用切换
hs.hotkey.bind({ &quot;alt&quot; }, &quot;q&quot;, function()
    toggleAppByBundleId(&quot;com.tencent.qq&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;w&quot;, function()
    toggleAppByBundleId(&quot;com.tencent.xinWeChat&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;v&quot;, function()
    toggleAppByBundleId(&quot;com.microsoft.VSCode&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;f&quot;, function()
    toggleAppByBundleId(&quot;com.apple.finder&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;c&quot;, function()
    toggleAppByBundleId(&quot;com.google.Chrome&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;j&quot;, function()
    toggleAppByBundleId(&quot;com.jetbrains.intellij&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;n&quot;, function()
    toggleAppByBundleId(&quot;cn.wiz.wiznoteformac&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;g&quot;, function()
    toggleAppByBundleId(&quot;com.electron.gridea&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;d&quot;, function()
    toggleAppByBundleId(&quot;com.jetbrains.datagrip&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;t&quot;, function()
    toggleAppByBundleId(&quot;com.googlecode.iterm2&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;m&quot;, function()
    toggleAppByBundleId(&quot;com.netease.macmail&quot;)
end)
hs.hotkey.bind({ &quot;alt&quot; }, &quot;p&quot;, function()
    toggleAppByBundleId(&quot;com.postmanlabs.mac&quot;)
end)

-- 鼠标位置
mousePositions = {}

function toggleAppByBundleId(appBundleID)
    -- 获取当前最靠前的应用,保存鼠标位置
    local frontMostApp = hs.application.frontmostApplication()
    mousePositions[frontMostApp:mainWindow():id()] = hs.mouse.getAbsolutePosition()

    -- 两者重复时,寻找下一个该窗口
    if frontMostApp:bundleID() == appBundleID then
        local wf = hs.window.filter.new{frontMostApp:name()}
        local locT = wf:getWindows({hs.window.filter.sortByFocusedLast})
        if locT and #locT &gt; 1 then
            local windowId = frontMostApp:mainWindow():id()
            for _, value in pairs(locT) do
                if value:id() ~= windowId then
                    value:focus()
                end
            end
        else
            frontMostApp:hide()
        end
    else
        -- 不存在窗口时,启动app
        local launchResult = hs.application.launchOrFocusByBundleID(appBundleID)
        if not launchResult then
            return
        end
    end
    -- 调整鼠标位置
    frontMostApp = hs.application.applicationsForBundleID(appBundleID)[1]
    local point = mousePositions[appBundleID]
    if point then
      hs.mouse.setAbsolutePosition(point)
      local currentSc = hs.mouse.getCurrentScreen()
      local tempSc = frontMostApp:mainWindow():screen()
      if currentSc ~= tempSc then
          setMouseToCenter(frontMostApp)
      end
    -- 找不到则转移到该屏幕中间
    else
        setMouseToCenter(frontMostApp)
    end
end

function setMouseToCenter(frontMostApp)
    local mainWindow = frontMostApp:mainWindow()
    if not mainWindow then
        return
    end
    local mainFrame = mainWindow:frame()
    local mainPoint = hs.geometry.point(mainFrame.x + mainFrame.w /2, mainFrame.y + mainFrame.h /2)
    hs.mouse.setAbsolutePosition(mainPoint)
end
</code></pre>
<h2 id="参考">参考</h2>
<ul>
<li><a href="https://mrdear.cn/posts/osx_app_switcher.html">学长博客 - OSX--OSX应用快速切换方案</a></li>
<li><a href="https://www.hammerspoon.org/go/">官方 Quick Start</a></li>
<li><a href="http://www.hammerspoon.org/docs/">官方文档</a></li>
<li><a href="https://sspai.com/post/53992">少数派 - 免费又强大的 macOS 自动化工具，Hammerspoon 可以让你少买很多 App</a></li>
<li><a href="https://www.v2ex.com/t/553241">V2EX - 推荐一个 MacOS 上用了就无法自拔的神器</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/72499152">Hammerspoon - 岂止于窗口管理</a></li>
<li><a href="https://github.com/rtoshiro/hammerspoon-init">hammerspoon-init</a></li>
<li><a href="https://www.runoob.com/lua/lua-tutorial.html">菜鸟教程 - Lua 教程</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Builder 模式.md]]></title>
        <id>http://blog.kuranado.com/post/builder-mo-shi-md/</id>
        <link href="http://blog.kuranado.com/post/builder-mo-shi-md/">
        </link>
        <updated>2020-10-05T02:36:45.000Z</updated>
        <content type="html"><![CDATA[<p>Builder 模式又称为建造者、生成器模式。日常开发中，很多类名包含 <code>Builder</code> 的都是生成器模式，例如 StringBuilder 的 append 方法</p>
<h2 id="生成器模式的本质">生成器模式的本质</h2>
<ul>
<li>分离了对象子组件的单独构造和装配，从而可以构造出复杂的对象。建造者模式适用于某个对象的构建过程较为复杂的情况</li>
<li>由于实现了构建和装配的解耦，不同的构建器，相同的装配，也可以做出不同的对象；相同的构建器，不同的装配顺序也可以做出不同的对象。构建和装配的解耦，实现了更好的复用</li>
</ul>
<h2 id="生成器模式的构成">生成器模式的构成</h2>
<p>生成器模式的构成分为两个部分：</p>
<ol>
<li>Builder 接口：定义如何<strong>构建</strong>各个部件，了解每个部件的构建实现细节</li>
<li>Director 接口：定义如何<strong>装配</strong>各个部件，负责产品的整体构建算法</li>
</ol>
<h2 id="举个栗子">举个栗子</h2>
<p>下面以生产电脑为例，讲解 Builder 模式：</p>
<h3 id="computer-类">Computer 类</h3>
<pre><code>package com.kuranado.builder;

import lombok.Getter;
import lombok.Setter;

/**
 * 电脑类
 * @Author: Xinling Jing
 * @Date: 2018-12-21 15:01
 */
@Setter
@Getter
public class Computer {

    private CPU cpu;
    private Graphics graphics;
    private HardDisk hardDisk;

    public Computer(CPU cpu, Graphics graphics, HardDisk hardDisk) {
        this.cpu = cpu;
        this.graphics = graphics;
        this.hardDisk = hardDisk;
    }

    public void start() {
        System.out.println(&quot;开机中...&quot;);
    }
}

class Hardware {

    /**
     * 品牌
     */
    private String brand;
    /**
     * 型号
     */
    private String model;

    public Hardware(String brand, String model) {
        this.brand = brand;
        this.model = model;
    }
}

/**
 * CPU
 */
class CPU extends Hardware {

    /**
     * Cache
     */
    private String cache;

    public CPU(String brand, String model, String cache) {
        super(brand, model);
        this.cache = cache;
    }
}

/**
 * 显卡
 */
class Graphics extends Hardware {

    /**
     * 显存
     */
    private String videoMemory;

    public Graphics(String brand, String model, String videoMemory) {
        super(brand, model);
        this.videoMemory = videoMemory;
    }
}

/**
 * 硬盘
 */
class HardDisk extends Hardware {

    /**
     * 硬盘容量
     */
    private String capacity;

    public HardDisk(String brand, String model, String capacity) {
        super(brand, model);
        this.capacity = capacity;
    }
}
</code></pre>
<h3 id="computerbuilder-接口">ComputerBuilder 接口</h3>
<pre><code>package com.kuranado.builder;

/**
 * @Author: Xinling Jing
 * @Date: 2018-12-22 10:17
 */
public interface ComputerBuilder {

    CPU buildCPU();
    Graphics buildGraphics();
    HardDisk buildHardDisk();

}
</code></pre>
<h3 id="maccomputerbuilder-实现类">MacComputerBuilder 实现类</h3>
<p>具体的 Builder 知道每个部件的实现细节。可以定义很多种 Builder，每种 Builder 在部件细节实现上都不尽相同，从而构建出不同的对象</p>
<pre><code>package com.kuranado.builder;

/**
 * @Author: Xinling Jing
 * @Date: 2018-12-22 10:19
 */
public class MacComputerBuilder implements ComputerBuilder {

    @Override
    public CPU buildCPU() {
        System.out.println(&quot;构建 Mac CPU&quot;);
        return new CPU(&quot;Intel&quot;, &quot;Xeon W&quot;, &quot;19MB&quot;);
    }

    @Override
    public Graphics buildGraphics() {
        System.out.println(&quot;构建 Mac 显卡&quot;);
        return new Graphics(&quot;AMD&quot;, &quot;Radeon Pro Vega 56&quot;, &quot;8GB&quot;);
    }

    @Override
    public HardDisk buildHardDisk() {
        System.out.println(&quot;构建 Mac 硬盘&quot;);
        return new HardDisk(&quot;三星&quot;, &quot;SM128C&quot;, &quot;2TB&quot;);
    }
}
</code></pre>
<h3 id="computerdirector-接口">ComputerDirector 接口</h3>
<pre><code>package com.kuranado.builder;

/**
 * @Author: Xinling Jing
 * @Date: 2018-12-22 10:39
 */
public interface ComputerDirector {

    Computer directorComputer();

}
</code></pre>
<h3 id="maccomputerdirector-实现类">MacComputerDirector 实现类</h3>
<p>具体的 Director 负责将部件装配起来，Director 知道整个产品的装配细节。可以定义很多 Director，从而装配出不同的对象</p>
<pre><code>package com.kuranado.builder;

import lombok.Getter;
import lombok.Setter;

/**
 * @Author: Xinling Jing
 * @Date: 2018-12-22 10:40
 */
@Setter
@Getter
public class MacComputerDirector implements ComputerDirector {

    private ComputerBuilder computerBuilder;

    public MacComputerDirector(ComputerBuilder computerBuilder) {
        this.computerBuilder = computerBuilder;
    }

    @Override
    public Computer directorComputer() {

        // 调用 Builder 构建每个部件
        CPU cpu = computerBuilder.buildCPU();
        Graphics graphics = computerBuilder.buildGraphics();
        HardDisk hardDisk = computerBuilder.buildHardDisk();

        // 装配电脑
        return new Computer(cpu, graphics, hardDisk);
    }
}
</code></pre>
<p>实际应用中 Director 需要进行复杂的运算，然后根据需要，调用 Builder 中的方法生成需要的部件对象并按照某种算法装配这些部件。实际开发中可能会有如下几种情况(摘自《研磨设计模式》)：</p>
<blockquote>
<ul>
<li>在运行指导者的时候，会按照整体构建算法的步骤进行运算，可能先运行前几步运算，到了某一步骤，需要具体创建某个部件对象了，然后就调用 Builder 中创建相应部件调度方法来创建具体的部件。同时把前面运算得到的数据传递给 Builder，因为在 Builder 内部实现创建和组装部件的时候，可能会需要这些数据</li>
<li>Builder 创建完具体的部件对象后，会把创建好的部件对象返回给装配者，装配者继续后续的算法运算，可能会用到已经创建好的对象</li>
<li>如此反复下去，直到整个构建算法完成，整个产品也就创建好了</li>
</ul>
</blockquote>
<h3 id="客户端调用">客户端调用</h3>
<pre><code>package com.kuranado.builder;

/**
 * @Author: Xinling Jing
 * @Date: 2018-12-17 21:12
 */
public class Client {

    public static void main(String[] args) {
        ComputerDirector director = new MacComputerDirector(new MacComputerBuilder());
        Computer computer = director.directorComputer();
       
        computer.start();
    }
}
</code></pre>
<p>程序运行结果：</p>
<pre><code>构建 Mac CPU
构建 Mac 显卡
构建 Mac 硬盘
开机中...
</code></pre>
<h2 id="生成器模式的优点">生成器模式的优点</h2>
<ul>
<li>松散耦合：生成器模式可以用同一个构建算法构建出表现上完全不同的产品，实现产品构建和产品表现上的分离。</li>
<li>可以很容易的改变产品的内部表示：Builder 对象提供接口给 Director 使用，所以具体不见的创建和装配方式被 Builder 接口隐藏了，Director 并不知道具体的实现细节。</li>
<li>复用性好：因为实现了构建算法和具体产品实现的分离，所以构建算法和具体的产品装配两者都可以复用。同一个构建算法可以应用到不用的具体产品实现中，同一个具体产品实现，也可以配合不同的构建算法。</li>
</ul>
<p>这就是生成器模式，是不是很简单呢！</p>
<h2 id="思考">思考</h2>
<p>现在在考虑一个问题，在 directorComputer 方法中我们组装电脑使用了这样一行代码：</p>
<pre><code>return new Computer(cpu, graphics, hardDisk);
</code></pre>
<p>想想这里有没有可以优化的地方呢？</p>
<p>想不到？</p>
<p>那倘若 Computer 类不止 CPU、Gragphics、HardDisk 这三个属性呢，比如 Computer 类还有 NetworkCard、SoundCard、MainBoard、Power、CDRom、Memory 等属性，那这时我们是不是要写这样一行代码来创建 Computer 对象：</p>
<pre><code>return new Computer(cpu, graphics, hardDisk, networkCard, soundCard, mainBoard, power, cdRom, memory);
</code></pre>
<p>遇到这种参数较多的情况，很多人还会重叠构造器：</p>
<pre><code>public Computer(CPU cpu) {
    this(cpu, null);
}

public Computer(CPU cpu, Graphics graphics) {
    this(cpu, graphics, null);
}

public Computer(CPU cpu, Graphics graphics, HardDisk hardDisk) {
    this(cpu, graphics, hardDisk, null)
}

...

public Computer(cpu, graphics, hardDisk, networkCard, soundCard, mainBoard, power, cdRom, memory) {
    this.cpu = cpu;
    this.graphics = graphics;
    this.hardDisk = hardDisk;
    ...
}
</code></pre>
<p>在参数很多的情况下，重叠构造器有很多缺点：</p>
<ol>
<li>层层嵌套，代码不灵活</li>
<li>不优雅</li>
<li>如果增加参数那就是噩梦</li>
</ol>
<p>这时候就有人说了：可以提供空参构造方法，然后一个个调 setter 方法设置属性就不用重叠构造器了！</p>
<pre><code>Computer computer = new Computer();
computer.setCPU(cpu);
computer.setGragphics(gragphics);
computer.setHardDisk(hardDisk);
computer.setNetworkCard(networkCard);
computer.setSoundCard(soundCard);
computer.setMainBoard(mainBoard);
computer.setPower(power);
computer.setCDRom(cdRom);
computer.setMemory(memory);
</code></pre>
<p>事实上，我们项目组的同事都是通过这种 set 的形式设置对象的，然而这真的是一个好的代码风格吗？《阿里 Java 开发手册》中推荐方法代码不超过 80 行，照这样创建对象很难符合规范。在工作中发现了这一点，想到了 Android 的 Api 中存在大量的链式调用，我们也可以将自己的代码修改成链式调用：</p>
<pre><code>package com.kuranado.builder;

import lombok.Getter;
import lombok.Setter;

/**
 * 电脑类
 * @Author: Xinling Jing
 * @Date: 2018-12-21 15:01
 */
@Setter
@Getter
public class Computer {

    private CPU cpu;
    private Graphics graphics;
    private HardDisk hardDisk;

    public Computer(Builder builder) {
        this.cpu = builder.cpu;
        this.graphics = builder.graphics;
        this.hardDisk = builder.hardDisk;
    }

    public void start() {
        System.out.println(&quot;开机中...&quot;);
    }

    public static class Builder {

        private CPU cpu;
        private Graphics graphics;
        private HardDisk hardDisk;

        public Builder setCpu(CPU cpu) {
            this.cpu = cpu;
            return this;
        }

        public Builder setGraphics(Graphics graphics) {
            this.graphics = graphics;
            return this;
        }

        public Builder setHardDisk(HardDisk hardDisk) {
            this.hardDisk = hardDisk;
            return this;
        }

        Computer build() {
            return new Computer(this);
        }
    }
}
</code></pre>
<p>内部类中的每个 set 方法都返回内部类自己，对于 set 方法可以使用 IDEA 自动生成，但需要注意需要选择 Builder 模板，而不要选择 Intellij Default：</p>
<figure data-type="image" tabindex="1"><img src="http://image.kuranado.com/blog/1601865469.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<p>然后创建 Computer 对象：</p>
<pre><code>new Computer.Builder().setCpu(cpu).setGraphics(graphics).setHardDisk(hardDisk).build();
</code></pre>
<p>这样即便在属性很多时代码看起来也很简洁，当然这种链式调用也存在一定缺点，比如：</p>
<ul>
<li>每次创建外部类对象，都需要再创建一个内部类，所以需要消耗更多的内存</li>
<li>每个属性要同时在内部类和外部类中定义</li>
</ul>
<p>所以大家具体根据使用场景而定</p>
<h2 id="参考资料">参考资料</h2>
<ul>
<li>《Effective Java》</li>
<li>《研磨设计模式》</li>
<li><a href="https://mrdear.cn/2018/03/06/experience/design_patterns--builder-model/">学长博客</a></li>
<li><a href="https://www.youtube.com/watch?v=03ly8k1FkVc">【GOF23设计模式】 建造者模式详解</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS 定位.md]]></title>
        <id>http://blog.kuranado.com/post/css-ding-wei-md/</id>
        <link href="http://blog.kuranado.com/post/css-ding-wei-md/">
        </link>
        <updated>2020-10-05T02:02:39.000Z</updated>
        <content type="html"><![CDATA[<p>[TOC]</p>
<h2 id="为什么需要定位">为什么需要定位</h2>
<p>使用标准流或浮动很难快速实现如下效果：</p>
<ol>
<li>某个元素可以自由的在一个盒子内移动位置，并且压住其它盒子</li>
<li>当我们滚动窗口的时候，盒子可以固定在屏幕的某个位置</li>
</ol>
<p>而定位具有如下特性：</p>
<ul>
<li>定位可以让盒子自由的在某个盒子内移动位置或者固定在屏幕中某个位置，并且可以压住其它盒子</li>
</ul>
<h2 id="定位组成">定位组成</h2>
<p>定位 = 定位模式 + 边偏移</p>
<h3 id="边偏移">边偏移</h3>
<p>边偏移决定了元素的最终位置，也就是定位的盒子移动到的最终位置</p>
<ul>
<li>top 顶部偏移量，定义元素相对其父元素上边线的距离</li>
<li>bottom 底部偏移量，定义元素相对其父元素下边线的距离</li>
<li>left 左侧偏移量，定义元素相对其父元素左边线的距离</li>
<li>right 右侧偏移量，定义元素相对其父元素右边线的距离</li>
</ul>
<p>如果一个定位盒子既设置了 left，又设置了 right，则默认会执行 left；如果一个定位盒子既设置了 top，又设置了 bottom，则默认会执行 top。不过一般情况，我们也不会为同一个定位盒子这样设置边偏移</p>
<h3 id="定位模式">定位模式</h3>
<p>定位模式用于指定一个元素在文档中的定位方式</p>
<ul>
<li>position
<ul>
<li>static 静态定位（了解）</li>
<li>relative 相对定位（重要）</li>
<li>absolute 绝对定位（重要）</li>
<li>fixed 固定定位（重要）</li>
<li>sticky 粘性定位（了解）</li>
</ul>
</li>
</ul>
<h4 id="static-静态定位">static 静态定位</h4>
<p>静态定位就是元素的默认定位方式，无定位的意思。静态定位按照标准流特性摆放位置，它没有边偏移</p>
<h4 id="relative-相对定位">relative 相对定位</h4>
<p>相对定位在元素移动位置时，是相对于它原来的位置来移动的</p>
<ul>
<li>相对定位最典型的应用就是给绝对定位当爹的</li>
<li>移动前在标准流的位置会继续占有，也就是<strong>不脱标</strong></li>
</ul>
<pre><code>.one {
    position: relative;
    top: 100px;
    left: 100px;
    width: 200px;
    height: 200px;
    background-color: purple;
}
.two {
    width: 200px;
    height: 200px;
    background-color: gray;
}
&lt;div class=&quot;one&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;two&quot;&gt;&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="1"><img src="http://image.kuranado.com/blog/1601863410.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h4 id="absolute-绝对定位">absolute 绝对定位</h4>
<p>绝对定位是相对于它的祖先元素来移动位置的</p>
<ul>
<li>如果绝对定位的元素没有祖先元素，或者<strong>祖先元素没有定位</strong>，则以浏览器为准定位</li>
</ul>
<pre><code>.father {
    width: 200px;
    height: 200px;
    background-color: purple;
}
.son {
    position: absolute;
    top: 100px;
    right: 100px;
    width: 200px;
    height: 200px;
    background-color: gray;
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="http://image.kuranado.com/blog/1601863424.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<ul>
<li>如果祖先元素有定位（相对定位、绝对定位、固定定位都可以），则以<strong>最近</strong>一级有定位的祖先元素为参考点移动位置</li>
<li>绝对定位不再占有原先的位置，也就是会<strong>脱标</strong></li>
</ul>
<p>子绝父相：子绝父相是开发中常用的定位方式，即：子级使用相对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其它兄弟的盒子；父盒子需要加定位限制子盒子在父盒子内的显示；父盒子布局时，需要占有位置，因此父亲只能是相对定位，这就是父觉子相的由来。<strong>总结：因为父级需要占有位置，因此是相对定位，子盒子不需要占有位置，则是绝对定位</strong></p>
<h4 id="fixed-固定定位">fixed 固定定位</h4>
<p>固定定位用于指定元素固定于浏览器可视窗口的位置</p>
<ul>
<li>以浏览器的<strong>可视窗口</strong>为参照点移动元素</li>
</ul>
<pre><code>div {
    position: fixed;
    top: 20px;
    right: 100px;
}    
&lt;div&gt;&lt;img src=&quot;./images/pvp.png&quot; alt=&quot;&quot;&gt;&lt;/div&gt;
</code></pre>
<p><img src="http://image.kuranado.com/blog/1601863442.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
缩小浏览器窗口：<br>
<img src="http://image.kuranado.com/blog/1601863448.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></p>
<ul>
<li>跟父元素没有任何关系</li>
<li>不会随滚动条滚动</li>
<li>固定定位不占有原先的位置，也就是会脱标</li>
</ul>
<p>固定定位小技巧：固定在版心右侧位置：</p>
<ol>
<li>让固定定位的盒子 left: 50%，也就是走到浏览器可视区域（也可以看做版心）的一半的位置</li>
<li>为固定定位的盒子添加 margin-left: 版心宽度一般的距离，当然也可以再多加几像素，保留一定空间<br>
这样就可以让固定定位的盒子贴着版心右侧对齐了</li>
</ol>
<pre><code>/* 版心 */
.w {
    margin: 0 auto;
    width: 800px;
    height: 1400px;
    background-color: hotpink;
}
/* 固定定位盒子 */
.fixed {
    position: fixed;
    top: 200px;
    left: 50%;
    margin-left: 405px;
    width: 50px;
    height: 100px;
    background-color: skyblue;
}
&lt;div class=&quot;w&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;fixed&quot;&gt;&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="3"><img src="http://image.kuranado.com/blog/1601863460.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h4 id="粘性定位">粘性定位</h4>
<p>粘性定位可以被认为是相对定位和固定定位的混合</p>
<ul>
<li>以浏览器的可视窗口为参照点移动元素（固定定位的特点）</li>
<li>粘性定位占有原先的位置（相对定位的特点）</li>
<li>必须添加 top、left、right、bottom 中的其中一个才生效</li>
<li>兼容性较差（IE 完全不支持）</li>
</ul>
<pre><code>body {
    height: 3000px;
}
.nav {
    position: sticky;
    top: 0;
    width: 800px;
    height: 50px;
    margin: 200px auto;
    background-color: skyblue;
}
&lt;div class=&quot;nav&quot;&gt;我是粘性定位&lt;/div&gt;
</code></pre>
<p>起始位置：<br>
<img src="http://image.kuranado.com/blog/1601863470.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
鼠标滚动到为粘性定位盒子设置的 top 值时，盒子将黏住不再跟着滚动：<br>
<img src="http://image.kuranado.com/blog/1601863477.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></p>
<h2 id="定位的层叠次序">定位的层叠次序</h2>
<p>在使用定位布局时，可能会出现盒子重叠的情况，这时需要使用 z-index 属性控制盒子的上下顺序</p>
<ul>
<li>z-index 属性值可以是整数、0 或负数，数值越大，盒子越靠上，如果没有指定数值，则默认值为 auto</li>
<li>如果属性值相同，则按照书写顺序，后来居上</li>
<li>数字后面不能加单位</li>
<li>只有定位的盒子才有 z-index 属性<br>
未加 index 按照书写顺序，后来居上：</li>
</ul>
<pre><code>div {
    position: absolute;
    top: 0;
    left: 0;
}
.one {
    width: 100px;
    height: 100px;
    background-color: red;
}
.two {
    width: 75px;
    height: 75px;
    background-color: green;
}
.three {
    width: 50px;
    height: 50px;
    background-color: blue;
}
&lt;div class=&quot;one&quot;&gt;我是第一个盒子&lt;/div&gt;
&lt;div class=&quot;two&quot;&gt;我是第二个盒子&lt;/div&gt;
&lt;div class=&quot;three&quot;&gt;我是第三个盒子&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="4"><img src="http://image.kuranado.com/blog/1601863487.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<p>指定 z-index：</p>
<pre><code>div {
    position: absolute;
    top: 0;
    left: 0;
}
.one {
    z-index: 3;
    width: 100px;
    height: 100px;
    background-color: red;
}
.two {
    z-index: 2;
    width: 75px;
    height: 75px;
    background-color: green;
}
.three {
    z-index: 1;
    width: 50px;
    height: 50px;
    background-color: blue;
}
&lt;div class=&quot;one&quot;&gt;我是第一个盒子&lt;/div&gt;
&lt;div class=&quot;two&quot;&gt;我是第二个盒子&lt;/div&gt;
&lt;div class=&quot;three&quot;&gt;我是第三个盒子&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="5"><img src="http://image.kuranado.com/blog/1601863495.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h2 id="总结">总结</h2>
<table>
<thead>
<tr>
<th>定位模式</th>
<th>是否脱标</th>
<th>移动位置</th>
<th>是否常用</th>
</tr>
</thead>
<tbody>
<tr>
<td>static 静态定位</td>
<td>否</td>
<td>不能使用边偏移</td>
<td>很少</td>
</tr>
<tr>
<td>relative 相对定位</td>
<td>否（占有位置）</td>
<td>相对于自身位置移动</td>
<td>常用</td>
</tr>
<tr>
<td>absolute 绝对定位</td>
<td>是（不占有位置）</td>
<td>带有定位的父级</td>
<td>常用</td>
</tr>
<tr>
<td>fixed 固定定位</td>
<td>是（不占有位置）</td>
<td>浏览器的可视窗口</td>
<td>常用</td>
</tr>
<tr>
<td>stick 粘性定位</td>
<td>否（占有位置）</td>
<td>浏览器可视窗口</td>
<td>很少</td>
</tr>
</tbody>
</table>
<h2 id="拓展">拓展</h2>
<h3 id="如何让绝对定位的盒子水平居中垂直居中">如何让绝对定位的盒子水平居中/垂直居中</h3>
<p>首先加了绝对定位的盒子不能通过 margin: 0 auto; 水平居中，但是可以通过如下算法实现水平居中：</p>
<ol>
<li>left: 50%; 让盒子的左侧移动到父级元素的水平中心位置</li>
<li>margin-left: 负的盒子自身宽度一半的px; 让盒子向左移动自身宽度的一半</li>
</ol>
<pre><code>div {
    position: absolute;
    left: 50%;
    margin-left: -100px;
    width: 200px;
    height: 200px;
    background-color: skyblue;
}
&lt;div&gt;&lt;/div&gt;
</code></pre>
<p><img src="http://image.kuranado.com/blog/1601863507.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
改变浏览器窗口大小，盒子也始终处于水平居中位置</p>
<p>同理如果让盒子垂直居中，则算法如下：</p>
<ol>
<li>top: 50%; 让盒子的上侧移动到父级元素的垂直中心位置</li>
<li>margin-top: 负的盒子自身高度一半的px; 让盒子向上移动自身高度的一半</li>
</ol>
<p>如果想让盒子既水平又垂直居中，算法如下：</p>
<ol>
<li>
<p>left: 50%;</p>
</li>
<li>
<p>margin-left: 负的盒子自身宽度一半的px;</p>
</li>
<li>
<p>top: 50%;</p>
</li>
<li>
<p>margin-top: 负的盒子自身高度一半的px;</p>
</li>
</ol>
<h3 id="绝对定位或固定定位的特殊特性">绝对定位或固定定位的特殊特性</h3>
<ol>
<li>行内元素添加绝对定位或固定定位，可以直接设置宽度和高度</li>
</ol>
<pre><code>span {
    position: absolute;
    width: 100px;
    height: 100px;
    background-color: skyblue;
}
&lt;span&gt;Hello&lt;/span&gt;
</code></pre>
<figure data-type="image" tabindex="6"><img src="http://image.kuranado.com/blog/1601863520.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<ol start="2">
<li>块级元素添加绝对定位或固定定位，如果不给宽度或高度，则默认大小是内容的大小</li>
</ol>
<pre><code>div {
    position: absolute;
    background-color: skyblue;
}
&lt;div&gt;Hello&lt;/div&gt;
</code></pre>
<p><img src="http://image.kuranado.com/blog/1601863533.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
3. 绝对定位或固定定位会完全压住盒子<br>
和浮动元素不同，浮动元素只会压住下面标准流的盒子，而不会压住下面标准流盒子里的文字或图片，但绝对定位或固定定位会压住下面标准流所有的内容：</p>
<pre><code>* {
    margin: 0;
    padding: 0;
}
div {
    position: absolute;
    width: 100px;
    height: 100px;
    background-color: skyblue;
}
&lt;div&gt;&lt;/div&gt;
&lt;p&gt;绝对定位或固定定位会压住下面标准流所有的内容&lt;/p&gt;
</code></pre>
<figure data-type="image" tabindex="7"><img src="http://image.kuranado.com/blog/1601863543.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS 属性书写顺序.md]]></title>
        <id>http://blog.kuranado.com/post/css-shu-xing-shu-xie-shun-xu-md/</id>
        <link href="http://blog.kuranado.com/post/css-shu-xing-shu-xie-shun-xu-md/">
        </link>
        <updated>2020-10-04T02:21:22.000Z</updated>
        <content type="html"><![CDATA[<p>建议遵循以下规则：</p>
<ol>
<li>布局定位属性：display/position/float/clear/visibility/overflow（建议 display 第一个写，毕竟关系到模式）</li>
<li>自身属性：width/heigth/margin/padding/border/background</li>
<li>文本属性：color/font/text-decoration/text-align/vertical-align/white-space/break-word</li>
<li>其它属性（CSS3）：content/cursor/border-radius/box-shadow/text-shadow/background:linear-gradient/...</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[LeetCode - 1 两数之和]]></title>
        <id>http://blog.kuranado.com/post/leetcode-1-liang-shu-zhi-he/</id>
        <link href="http://blog.kuranado.com/post/leetcode-1-liang-shu-zhi-he/">
        </link>
        <updated>2020-10-04T02:18:00.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-两数之和"><a href="https://leetcode-cn.com/problems/two-sum/">1 两数之和</a> 2020年3月15日星期日</h2>
<p>在 LeetCode 做的第一题，比起以前做的 OJ 系统，省去了编写繁琐、无脑的读取文件操作部分的代码，很人性化</p>
<h3 id="解法一-92ms">解法一 92ms</h3>
<p>暴力遍历</p>
<pre><code class="language-java">class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] result = new int[2];
        for (int i = 0; i &lt; nums.length; i++) {
            for (int j = i + 1; j &lt; nums.length; j++) {
                if (nums[i] + nums[j] == target) {
                    result[0] = i;
                    result[1] = j;
                    return result;
                }
            }
        }
        return result;
    }
}
</code></pre>
<h4 id="时间复杂度">时间复杂度</h4>
<p>O(n<sup>2</sup>)</p>
<h4 id="空间复杂度">空间复杂度</h4>
<p>O(1)</p>
<h3 id="解法二-4ms">解法二 4ms</h3>
<p>借助 Hash 表</p>
<pre><code class="language-java">class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;(nums.length);
        for (int i = 0; i &lt; nums.length; i++) {
            int a = target - nums[i];
            if (map.containsKey(a)) {
                return new int[]{map.get(a), i};
            }
            map.put(nums[i], i);
        }
        throw new IllegalArgumentException();
    }
}
</code></pre>
<h4 id="个人观点">个人观点</h4>
<p>题目并没有明确提到给定数组中不会出现重复元素，但根据题意，如果真的有重复元素，那结果就可能会有多个，真的有重复数据，就会自动覆盖掉，代码仍可以返回其中一组答案，所以把数组元素当作 map 的 key 也是没有问题的</p>
<h4 id="时间复杂度-2">时间复杂度</h4>
<p>O(n)<br>
遍历了包含有 n 个元素的列表一次。在表中进行的每次查找只花费 O(1) 的时间</p>
<h4 id="空间复杂度-2">空间复杂度</h4>
<p>O(n)<br>
所需的额外空间取决于哈希表中存储的元素数量，最多存储 n 个元素</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS 浮动.md]]></title>
        <id>http://blog.kuranado.com/post/css-fu-dong-md/</id>
        <link href="http://blog.kuranado.com/post/css-fu-dong-md/">
        </link>
        <updated>2020-10-03T02:44:38.000Z</updated>
        <content type="html"><![CDATA[<p>[TOC]</p>
<h2 id="什么是浮动">什么是浮动</h2>
<p>float 属性用于创建浮动框，将其移动到一边，直到左边边缘或右边边缘及包含块或另一个浮动框的边缘<br>
浮动最典型的应用：可以让多个块级元素在一行内并列显示（把块级元素转换为行内块元素虽然也可以在一行内并列显示，但行内块元素之间有间隙，而这个间隙是不可控的）</p>
<pre><code>div {
    width: 200px;
    height: 200px;
    background-color: skyblue;
    float: left;
}
&lt;div&gt;第一个盒子&lt;/div&gt;
&lt;div&gt;第二个盒子&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="1"><img src="http://image.kuranado.com/blog/1601693114.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<pre><code>div {
    width: 200px;
    height: 200px;
    background-color: skyblue;
}
.left {
    float: left;
}
.right {    
    float: right;
}
&lt;div class=&quot;left&quot;&gt;第一个盒子&lt;/div&gt;
&lt;div class=&quot;right&quot;&gt;第二个盒子&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="2"><img src="http://image.kuranado.com/blog/1601693126.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h2 id="浮动特性重难点">浮动特性（重难点）</h2>
<h3 id="浮动的元素会脱离标准流脱标">浮动的元素会脱离标准流（脱标）</h3>
<p>浮动的元素脱标后，浮动的盒子<strong>不再保留原先的位置</strong></p>
<pre><code>.left {
    width: 100px;
    height: 100px;
    background-color: skyblue;
    float: left;
}
.standard {
    width: 300px;
    height: 300px;
    background-color: peru;
}
&lt;div class=&quot;left&quot;&gt;浮动的盒子&lt;/div&gt;
&lt;div class=&quot;standard&quot;&gt;标准流的盒子&lt;/div&gt;
</code></pre>
<p><img src="http://image.kuranado.com/blog/1601693145.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
如上图，浮动的元素会压住下面标准流的盒子，但是，浮动的盒子不会压住下面标准流的图片或文字，因为浮动产生的最初目的是为了做文字环绕效果的（如果想让盒子压住文字或图片，应该为盒子添加绝对定位或固定定位）：</p>
<pre><code>div {
    float: left;
    width: 100px;
    height: 100px;
    background-color: skyblue;
}
&lt;div&gt;&lt;/div&gt;
&lt;p&gt;浮动的元素不会压住标准流盒子里的文字或图片&lt;/p&gt;
</code></pre>
<figure data-type="image" tabindex="3"><img src="http://image.kuranado.com/blog/1601693158.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h3 id="浮动的元素会一行内显示并且元素顶部对齐">浮动的元素会一行内显示并且元素顶部对齐</h3>
<ul>
<li>如果多个盒子都设置了浮动，则它们会按照属性值一行内显示并且<strong>顶端对齐</strong>排列</li>
</ul>
<pre><code>div {
    width: 200px;
    height: 200px;
    float: left;
}
.one {
    background-color: pink;
}
.two {
    background-color: orange;
    height: 220px;
}
.three {
    background-color: gray;
}
.four {
    background-color: skyblue;
}
&lt;div class=&quot;one&quot;&gt;1&lt;/div&gt;
&lt;div class=&quot;two&quot;&gt;2&lt;/div&gt;
&lt;div class=&quot;three&quot;&gt;3&lt;/div&gt;
&lt;div class=&quot;four&quot;&gt;4&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="4"><img src="http://image.kuranado.com/blog/1601693171.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<ul>
<li>浮动的元素是相互贴靠在一起，不会有缝隙，如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐<br>
<img src="http://image.kuranado.com/blog/1601693180.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
<img src="http://image.kuranado.com/blog/1601693202.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></li>
</ul>
<h3 id="浮动的元素具有行内块元素的特性">浮动的元素具有行内块元素的特性</h3>
<ul>
<li>任何元素都可以浮动，不管原先是什么模式的元素，添加浮动之后具有与<strong>行内块元素</strong>相似的特性</li>
</ul>
<pre><code>span {
    float: left;
    width: 100px;
    height: 100px;
    background-color: pink;
}
&lt;span&gt;1&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;
</code></pre>
<p><img src="http://image.kuranado.com/blog/1601693215.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
span 为行内元素，行内元素直接指定高度或宽度是无效的，但是为其添加浮动后，便具有了与行内块元素相似的特性，因为行内块元素的宽度、高度、外边距、内边距都可以设置，所以上面代码的宽度和高度将会生效。<br>
所以如果行内元素有了浮动，则不需要转换为块级元素或行内块元素，便可以直接为其设置高度和宽度。</p>
<pre><code>span {
    float: left;
    width: 100px;
    height: 100px;
    background-color: pink;
}
p {    
    height: 200px;
    background-color: purple;
}
&lt;span&gt;1&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;
&lt;p&gt;p&lt;/p&gt;
</code></pre>
<p><img src="http://image.kuranado.com/blog/1601693225.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
p 是块状元素，没有浮动，是标准流的盒子，没有为其指定宽度，其宽度默认为容器（父元素）的 100%，下面为 p 添加浮动：</p>
<pre><code>span {
    float: left;
    width: 100px;
    height: 100px;
    background-color: pink;
}
p {    
    float: left;
    height: 200px;
    background-color: purple;
}
&lt;span&gt;1&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;
&lt;p&gt;p&lt;/p&gt;
</code></pre>
<p><img src="http://image.kuranado.com/blog/1601693238.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
为 p 元素添加浮动后，它便拥有了与行内块元素相似的特性，如果没有为行内块元素指定宽度，则行内块元素的默认宽度为它本身内容的宽度</p>
<h2 id="浮动元素经常和标准流父级搭配使用">浮动元素经常和标准流父级搭配使用</h2>
<ul>
<li>为了约束浮动元素位置，网页布局一般采取的策略是：先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置，这也刚好符合网页布局第一准则</li>
<li>一个元素浮动了，理论上，应该为其余的兄弟元素也设置浮动</li>
<li>浮动的盒子只会影响浮动盒子后面的标准流，不会影响前面的标准流</li>
</ul>
<pre><code>.one {
    width: 100px;
    height: 100px;
    background-color: pink;
}
.two {
    width: 200px;
    height: 200px;
    background-color: orange;
    float: left;
}
.three {
    width: 300px;
    height: 300px;
    background-color: skyblue;
}
&lt;div class=&quot;one&quot;&gt;标准流&lt;/div&gt;
&lt;div class=&quot;two&quot;&gt;浮动&lt;/div&gt;
&lt;div class=&quot;three&quot;&gt;标准流&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="5"><img src="http://image.kuranado.com/blog/1601693251.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h2 id="清除浮动">清除浮动</h2>
<h3 id="为什么要清除浮动">为什么要清除浮动</h3>
<ol>
<li>如果为父盒子定义高度，父盒子内子元素都设置浮动没问题，然而子元素的数据往往是不确定的，如果子元素数量较多，很可能会超出父盒子的范围，所以父盒子一般不方便指定高度</li>
<li>由于很多情况下，父盒子不方便指定高度，父盒子内浮动的子盒子又不占有位置，所以父盒子的高度就会变成 0，进而影响页面上其它标准流盒子的排版</li>
</ol>
<h3 id="清除浮动的本质">清除浮动的本质</h3>
<ul>
<li>清除浮动的本质是<strong>清除浮动元素造成的影响</strong></li>
<li>如果父盒子本身有高度，则不需要清除浮动</li>
<li>清除浮动之后，父盒子就会根据浮动的子盒子自动检测高度。标准流的父盒子有了高度，就不会影响下面的标准流了</li>
</ul>
<h3 id="语法">语法</h3>
<ul>
<li>clear: 属性值
<ul>
<li>left 不允许左侧有浮动元素（清除左侧浮动的影响）</li>
<li>right 不允许右侧有浮动元素（清除右侧浮动的影响）</li>
<li>both 最常用，同时清除左右两侧浮动的影响</li>
</ul>
</li>
</ul>
<h3 id="清除浮动的四种方法">清除浮动的四种方法</h3>
<h4 id="1-额外标签法不常用">1. 额外标签法（不常用）</h4>
<p>也称隔墙法，W3C 推荐做法<br>
在浮动元素末尾添加一个空的<strong>块级</strong>标签，例如：<code>&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;</code>（不一定必须是 div 标签，只要是块级元素即可）</p>
<ul>
<li>优点：通俗易懂，书写方便</li>
<li>缺点：添加许多无意义的标签，结构化较差</li>
</ul>
<pre><code>.box {
    width: 230px;
    background-color: #ccc;
}
.one {
    width: 100px;
    height: 100px;
    background-color: pink;
    float: left
}
.two {
    width: 100px;
    height: 100px;
    background-color: orange;
    float: left;
}
.three {
    width: 300px;
    height: 300px;
    background-color: skyblue;
}
.clear {
    clear: both;
}
&lt;div class=&quot;box&quot;&gt;
    &lt;div class=&quot;one&quot;&gt;浮动1&lt;/div&gt;
    &lt;div class=&quot;two&quot;&gt;浮动2&lt;/div&gt;
    &lt;div class=&quot;one&quot;&gt;浮动3&lt;/div&gt;
    &lt;div class=&quot;two&quot;&gt;浮动4&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;three&quot;&gt;标准流&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="6"><img src="http://image.kuranado.com/blog/1601693263.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h4 id="2-为父盒子添加-overflow-属性">2. 为父盒子添加 overflow 属性</h4>
<p>可以给父级元素添加 overflow 属性，将其属性设置为 hidden 或 auto 或 scroll</p>
<ul>
<li>优点：代码简洁</li>
<li>缺点：无法显示溢出的部分</li>
</ul>
<pre><code>.box {
    width: 230px;
    background-color: #ccc;
    overflow: hidden;
}
.one {
    width: 100px;
    height: 100px;
    background-color: pink;
    float: left
}
.two {
    width: 100px;
    height: 100px;
    background-color: orange;
    float: left;
}
.three {
    width: 300px;
    height: 300px;
    background-color: skyblue;
}
.clear {
    clear: both;
}
&lt;div class=&quot;box&quot;&gt;
    &lt;div class=&quot;one&quot;&gt;浮动1&lt;/div&gt;
    &lt;div class=&quot;two&quot;&gt;浮动2&lt;/div&gt;
    &lt;div class=&quot;one&quot;&gt;浮动3&lt;/div&gt;
    &lt;div class=&quot;two&quot;&gt;浮动4&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;three&quot;&gt;标准流&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="7"><img src="http://image.kuranado.com/blog/1601693274.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h4 id="3-为父盒子添加-after-伪元素">3. 为父盒子添加 after 伪元素</h4>
<p>本质是 CSS 为父元素内最后添加一个子元素，原理和额外标签法类似<br>
为<strong>父元素</strong>添加如下样式（类名一般约定为 clearfix）：</p>
<pre><code>.clearfix:after {
    content: &quot;&quot;;
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
}
.clearfix:after {
    /** 兼容 IE6、IE7 专用**/
    *zoom: 1;
}
</code></pre>
<ul>
<li>优点：没有增加标签，结构更简单</li>
<li>缺点：需要照顾低版本的浏览器</li>
<li>代表网站：百度、淘宝网、网易等</li>
</ul>
<pre><code>.clearfix:after {
    content: &quot;&quot;;
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
}
.clearfix {
    /** 兼容 IE6、IE7 专用**/
    *zoom: 1;
}
.box {
    width: 230px;
    background-color: #ccc;
}
.one {
    width: 100px;
    height: 100px;
    background-color: pink;
    float: left
}
.two {
    width: 100px;
    height: 100px;
    background-color: orange;
    float: left;
}
.three {
    width: 300px;
    height: 300px;
    background-color: skyblue;
}
.clear {
    clear: both;
}
&lt;div class=&quot;box clearfix&quot;&gt;
    &lt;div class=&quot;one&quot;&gt;浮动1&lt;/div&gt;
    &lt;div class=&quot;two&quot;&gt;浮动2&lt;/div&gt;
    &lt;div class=&quot;one&quot;&gt;浮动3&lt;/div&gt;
    &lt;div class=&quot;two&quot;&gt;浮动4&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;three&quot;&gt;标准流&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="8"><img src="http://image.kuranado.com/blog/1601693288.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h4 id="4-为父元素添加双伪元素">4. 为父元素添加双伪元素</h4>
<p>为父元素添加如下样式：</p>
<pre><code>.clearfix:before, .clearfix:after {
    content: &quot;&quot;;
    display: table;
}
.clearfix:after {
    clear: both;
}
.clearfix {
    /** 兼容 IE6、IE7 专用**/
    *zoom: 1;
}
</code></pre>
<ul>
<li>优点：代码更简洁</li>
<li>缺点：需要照顾低版本浏览器</li>
</ul>
<pre><code>.clearfix:before, .clearfix:after {
    content: &quot;&quot;;
    display: table;
}
.clearfix:after {
    clear: both;
}
.clearfix {
    /** 兼容 IE6、IE7 专用**/
    *zoom: 1;
}
.box {
    width: 230px;
    background-color: #ccc;
}
.one {
    width: 100px;
    height: 100px;
    background-color: pink;
    float: left
}
.two {
    width: 100px;
    height: 100px;
    background-color: orange;
    float: left;
}
.three {
    width: 300px;
    height: 300px;
    background-color: skyblue;
}
.clear {
    clear: both;
}
&lt;div class=&quot;box clearfix&quot;&gt;
    &lt;div class=&quot;one&quot;&gt;浮动1&lt;/div&gt;
    &lt;div class=&quot;two&quot;&gt;浮动2&lt;/div&gt;
    &lt;div class=&quot;one&quot;&gt;浮动3&lt;/div&gt;
    &lt;div class=&quot;two&quot;&gt;浮动4&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;three&quot;&gt;标准流&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="9"><img src="http://image.kuranado.com/blog/1601693298.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS 盒子模型.md]]></title>
        <id>http://blog.kuranado.com/post/css-he-zi-mo-xing-md/</id>
        <link href="http://blog.kuranado.com/post/css-he-zi-mo-xing-md/">
        </link>
        <updated>2020-10-02T02:57:53.000Z</updated>
        <content type="html"><![CDATA[<p>[TOC]</p>
<blockquote>
<p>CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，包括：边框、外边距、内边距和实际内容</p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="http://image.kuranado.com/blog/1601607497.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<h2 id="边框">边框</h2>
<ul>
<li>border-width 边框粗细</li>
<li>border-style 边框样式
<ul>
<li>none 默认，无边框</li>
<li>solid 最常用，实线边框</li>
<li>dashed 虚线边框</li>
<li>double 双线边框</li>
<li>dotted 电线边框</li>
</ul>
</li>
<li>border-color 边框颜色</li>
<li>border 边框简写，没有先后顺序要求，但一般写成：<code>border: 边框粗细 边框样式 边框颜色</code>，如 <code>border: 1px solid red;</code></li>
<li>border-top 只设置上边框</li>
<li>border-bottom 只设置下边框</li>
<li>border-left 只设置左边框</li>
<li>border-right 只设置右边框</li>
<li>border-collapse 合并相邻边框</li>
</ul>
<p><strong>注意</strong>：</p>
<ul>
<li>边框会改变盒子大小，如：</li>
</ul>
<pre><code>/** 200px * 200px 的盒子 **/
div {
    width: 200px;
    height: 200px;
    background-color: pink;
}
&lt;div&gt;&lt;/div&gt;
</code></pre>
<p>加上 border 后，将会使盒子变大：</p>
<pre><code>/** 220px * 220px 的盒子 **/
div {
    width: 200px;
    height: 200px;
    background-color: pink;
    border: 10px solid red;
}
&lt;div&gt;&lt;/div&gt;
</code></pre>
<p>如果加上边框后，并不想改变盒子原有大小，则可以用盒子原有宽度/高度减去 2 * 边框的宽度：</p>
<pre><code>/** 200px * 200px 的盒子 **/
div {
    width: 180px;
    height: 180px;
    background-color: pink;
    border: 10px solid red;
}
&lt;div&gt;&lt;/div&gt;
</code></pre>
<h2 id="内边距">内边距</h2>
<ul>
<li>padding 设置内边距，即<strong>边框与内容之间的距离</strong>
<ul>
<li>跟一个值，表示上下左右的内边距</li>
<li>跟两个值，第一个值表示上、下内边距，第二个值表示左、右内边距</li>
<li>跟三个值，第一个值表示上内边距，第二个值表示左、右内边距，第三个值表示下内边距</li>
<li>跟四个值，依次表示上、右、下、左内边距</li>
</ul>
</li>
<li>padding-left 左内边距</li>
<li>padding-right 右内边距</li>
<li>padding-top 上内边距</li>
<li>padding-bottom 下内边距</li>
</ul>
<p><strong>注意</strong>：</p>
<ul>
<li>内边距会改变盒子大小，如：</li>
</ul>
<pre><code>/** 200px * 200px 的盒子 **/
div {
    width: 200px;
    height: 200px;
    background-color: pink;
}
&lt;div&gt;&lt;/div&gt;
</code></pre>
<p>加上 padding 后，将会撑大盒子：</p>
<pre><code>/** 220px * 220px 的盒子 **/
div {
    width: 200px;
    height: 200px;
    background-color: pink;
    padding: 10px;
}
&lt;div&gt;&lt;/div&gt;
</code></pre>
<p>如果加上边框后，并不想改变盒子原有大小，则可以用盒子原有宽度/高度减去 2 * padding 的宽度：</p>
<pre><code>/** 200px * 200px 的盒子 **/
div {
    width: 180px;
    height: 180px;
    background-color: pink;
    padding: 10px;
}
&lt;div&gt;&lt;/div&gt;
</code></pre>
<ul>
<li>如何盒子本身没有指定 width 或 height 属性，则此时 padding 不会撑开盒子大小，如：</li>
</ul>
<pre><code>div {
    height: 200px;
    background-color: pink;
    padding: 30px;
}
&lt;body&gt;
    &lt;!-- div 只指定了高度，没有指定宽度，所以该盒子高度将变成 260px，但是宽度保持不变 --&gt;
    &lt;div&gt;&lt;/div&gt;
&lt;/body&gt;
</code></pre>
<pre><code>div {
    width: 100%;
    height: 200px;
    background-color: pink;
    padding: 30px;
}
&lt;body&gt;
    &lt;!-- div 既指定了高度，也指定了宽度，所以该盒子高度将变成 260px，宽度在父元素宽度的基础上增加 2 * 30px --&gt;
    &lt;div&gt;&lt;/div&gt;
&lt;/body&gt;
</code></pre>
<pre><code>div {
    width: 200px;
    height: 200px;
    background-color: pink;
}
div p {
    padding: 30px;
    background-color: purple;
}
&lt;body&gt;
    &lt;div&gt;
        &lt;!-- p 是块状元素，没有为其指定宽度，则其宽度默认是容器（父元素）的 100%，所以此处 p 的宽度是 200px；也没有为其指定高度，所以此处 p 的高度是 2 * 30px = 60px --&gt;
        &lt;p&gt;&lt;/p&gt;
    &lt;/div&gt;
&lt;/body&gt;
</code></pre>
<pre><code>div {
    width: 200px;
    height: 200px;
    background-color: pink;
}
div p {
    width: 100%;
    padding: 30px;
    background-color: purple;
}
&lt;body&gt;
    &lt;div&gt;
        &lt;!-- p 是块状元素，为其指定了高度是容器（父元素）的 100%，所以此处 p 的宽度是 200px + 2 * 30px = 260px；没有为其指定高度，所以此处 p 的高度是 2 * 30px = 60px --&gt;
        &lt;p&gt;&lt;/p&gt;
    &lt;/div&gt;
&lt;/body&gt;
</code></pre>
<h2 id="外边距">外边距</h2>
<ul>
<li>margin 设置外边距，即控制<strong>盒子与盒子之间的距离</strong>
<ul>
<li>跟一个值，表示上下左右的外边距</li>
<li>跟两个值，第一个值表示上、下外边距，第二个值表示左、右外边距</li>
<li>跟三个值，第一个值表示上外边距，第二个值表示左、右外边距，第三个值表示下外边距</li>
<li>跟四个值，依次表示上、右、下、左外边距</li>
</ul>
</li>
<li>margin-left 左外边距</li>
<li>margin-right 右外边距</li>
<li>margin-top 上外边距</li>
<li>margin-bottom 下外边距</li>
</ul>
<h3 id="外边距的典型应用">外边距的典型应用</h3>
<ul>
<li>外边距可以让<strong>块级</strong>盒子水平居中，但必须满足如下两个条件：
<ol>
<li>盒子必须指定了<strong>宽度</strong></li>
<li>盒子左右的外边距都设置为 auto，如：margin: 0 auto;</li>
</ol>
<pre><code>div {
    width: 900px;
    height: 200px;
    background-color: pink;
    margin: 0 auto;
}
&lt;div&gt;&lt;/div&gt;
</code></pre>
</li>
<li><strong>行内元素</strong>或者<strong>行内块元素</strong>水平居中，只要给其父元素添加 text-align: center; 即可</li>
</ul>
<pre><code>div {
    width: 900px;
    height: 200px;
    background-color: pink;
    margin: 0 auto;
    text-align: center;
}
&lt;div&gt;
    &lt;!-- 行内元素 --&gt;
    &lt;span&gt;Hello&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;
    &lt;!-- 行内块元素 --&gt;
    &lt;img src=&quot;./images/logo.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;
</code></pre>
<h3 id="外边距可能造成的问题">外边距可能造成的问题</h3>
<h4 id="相邻块元素垂直外边距合并问题元素浮动后不会出现此问题">相邻块元素垂直外边距合并问题（元素浮动后不会出现此问题）</h4>
<p>使用 margin 定义块元素的<strong>垂直外边距</strong>时，可能会出现外边距的合并。当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距 margin-bottom，下面的元素有上外边距 margin-top，则它么之间的垂直间距不是 margin-bottom 和 margin-top 之和。而是取两个值中的较大者<br>
<img src="http://image.kuranado.com/blog/1601607517.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
针对此问题的解决方案：尽量只给一个盒子添加 margin 值</p>
<h4 id="嵌套块元素垂直外边距的塌陷问题元素浮动后不会出现此问题">嵌套块元素垂直外边距的塌陷问题（元素浮动后不会出现此问题）</h4>
<p>对于两个嵌套（父子关系）的块元素，父元素有上外边距，同时子元素也有上外边距，此时父元素会塌陷成较大的上外边距<br>
<img src="http://image.kuranado.com/blog/1601607529.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></p>
<pre><code>.father {
    width: 200px;
    height: 200px;
    background-color: pink;
    margin-top: 50px;
}
.son {
    width: 40px;
    height: 40px;
    background-color: purple;
    margin-top: 100px;
}
&lt;div class=&quot;father&quot;&gt;
    &lt;div class=&quot;son&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
</code></pre>
<p><img src="http://image.kuranado.com/blog/1601607541.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
针对此问题的解决方案有 3 个：</p>
<ul>
<li>为父元素定义上边框</li>
</ul>
<pre><code>    
.father {
    width: 200px;
    height: 200px;
    background-color: pink;
    margin-top: 50px;
    border-top: 1px solid transparent;
}
.son {
    width: 40px;
    height: 40px;
    background-color: purple;
    margin-top: 100px;
}
&lt;div class=&quot;father&quot;&gt;
    &lt;div class=&quot;son&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
</code></pre>
<figure data-type="image" tabindex="2"><img src="http://image.kuranado.com/blog/1601607551.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></figure>
<ul>
<li>为父元素定义上内边距</li>
<li>为父元素添加 overflow:hidden</li>
</ul>
<h4 id="兼容性">兼容性</h4>
<h2 id="内外边距">内外边距</h2>
<h3 id="清除浏览器默认内外边距">清除浏览器默认内外边距</h3>
<pre><code>/** CSS 的第一行代码 **/
* {
    margin: 0;
    padding: 0;
}
</code></pre>
<h3 id="行内元素的内外边距兼容性">行内元素的内外边距兼容性</h3>
<p>行内元素为了照顾兼容性，尽量只设置左右<strong>内外</strong>边距，不要设置上下内外边距。但是转换为块元素或行内块元素就没有这个问题</p>
<pre><code>span {
    /** span 为行内元素，只有左右内外边距生效为 20px，上下内外边距没有生效 **/
    margin: 20px
    padding: 20px;
}
&lt;span&gt;Hello&lt;/span&gt;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[电影 & 电视剧.md]]></title>
        <id>http://blog.kuranado.com/post/dian-ying-and-dian-shi-ju-md/</id>
        <link href="http://blog.kuranado.com/post/dian-ying-and-dian-shi-ju-md/">
        </link>
        <updated>2020-10-01T01:09:45.000Z</updated>
        <content type="html"><![CDATA[<h2 id="已看">已看</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8618125"><label class="task-list-item-label" for="task-item-8618125"> Rango 蓝戈</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-81137"><label class="task-list-item-label" for="task-item-81137"> 超能陆战队</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3070914"><label class="task-list-item-label" for="task-item-3070914"> 忠犬八公的故事</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1265831"><label class="task-list-item-label" for="task-item-1265831"> 肖申克的救赎</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3863679"><label class="task-list-item-label" for="task-item-3863679"> 魔女宅急变</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7714703"><label class="task-list-item-label" for="task-item-7714703"> 致命魔术</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6899490"><label class="task-list-item-label" for="task-item-6899490"> 机器人瓦利</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9480490"><label class="task-list-item-label" for="task-item-9480490"> 超级大坏蛋</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-30769"><label class="task-list-item-label" for="task-item-30769"> 功夫熊猫 1、2、3</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3080442"><label class="task-list-item-label" for="task-item-3080442"> 龙猫</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7729092"><label class="task-list-item-label" for="task-item-7729092"> 冰雪奇缘 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3007230"><label class="task-list-item-label" for="task-item-3007230"> 冰雪奇缘-生日惊喜</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5969126"><label class="task-list-item-label" for="task-item-5969126"> 恐怖游轮</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1014280"><label class="task-list-item-label" for="task-item-1014280"> 天空之城</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9667417"><label class="task-list-item-label" for="task-item-9667417"> 千与千寻</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2908526"><label class="task-list-item-label" for="task-item-2908526"> 哈尔的移动城堡</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8689605"><label class="task-list-item-label" for="task-item-8689605"> 杀死比尔 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9899473"><label class="task-list-item-label" for="task-item-9899473"> 速度与激情 3、4、5、6、7、8</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5487783"><label class="task-list-item-label" for="task-item-5487783"> 天将雄师</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3291198"><label class="task-list-item-label" for="task-item-3291198"> 神偷奶爸 1、2、3</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1224261"><label class="task-list-item-label" for="task-item-1224261"> 小黄人大冒险</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5989732"><label class="task-list-item-label" for="task-item-5989732"> 钢铁侠</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5651546"><label class="task-list-item-label" for="task-item-5651546"> 海扁王 1</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6177132"><label class="task-list-item-label" for="task-item-6177132"> 东成西就</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9647191"><label class="task-list-item-label" for="task-item-9647191"> 起风了</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9370035"><label class="task-list-item-label" for="task-item-9370035"> 婚纱</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1799811"><label class="task-list-item-label" for="task-item-1799811"> 天降美食 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9813534"><label class="task-list-item-label" for="task-item-9813534"> 指环王-护戒使者</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1963932"><label class="task-list-item-label" for="task-item-1963932"> 指环王-双塔奇兵</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8637161"><label class="task-list-item-label" for="task-item-8637161"> 指环王-王者归来</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9538807"><label class="task-list-item-label" for="task-item-9538807"> 霍比特人-意外之旅</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3378806"><label class="task-list-item-label" for="task-item-3378806"> 霍比特人-史矛革荒漠</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4407669"><label class="task-list-item-label" for="task-item-4407669"> 霍比特人-五军之战</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1177962"><label class="task-list-item-label" for="task-item-1177962"> 头脑特工队</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4708645"><label class="task-list-item-label" for="task-item-4708645"> 源代码</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-775769"><label class="task-list-item-label" for="task-item-775769"> 记忆碎片</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-438262"><label class="task-list-item-label" for="task-item-438262"> 妈妈再爱我一次</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1762361"><label class="task-list-item-label" for="task-item-1762361"> 青春派</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3359723"><label class="task-list-item-label" for="task-item-3359723"> 黑客帝国 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-21015"><label class="task-list-item-label" for="task-item-21015"> 模仿游戏</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6633971"><label class="task-list-item-label" for="task-item-6633971"> 天才眼镜狗</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-309769"><label class="task-list-item-label" for="task-item-309769"> 穿靴子的猫</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6203522"><label class="task-list-item-label" for="task-item-6203522"> 穿靴子的猫番外篇-萌猫三剑客</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9194511"><label class="task-list-item-label" for="task-item-9194511"> 盗梦空间</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9022216"><label class="task-list-item-label" for="task-item-9022216"> 逆世界</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8335102"><label class="task-list-item-label" for="task-item-8335102"> 终结者</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1469594"><label class="task-list-item-label" for="task-item-1469594"> 碟中谍 1、2、3、4、5</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7409644"><label class="task-list-item-label" for="task-item-7409644"> 黑衣人 1、2、3</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5337460"><label class="task-list-item-label" for="task-item-5337460"> 少年班</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1253913"><label class="task-list-item-label" for="task-item-1253913"> 教父 1、2、3</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1698121"><label class="task-list-item-label" for="task-item-1698121"> 阿甘正传</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3676495"><label class="task-list-item-label" for="task-item-3676495"> 剪刀手爱德华</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9234582"><label class="task-list-item-label" for="task-item-9234582"> 第九区</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8641794"><label class="task-list-item-label" for="task-item-8641794"> 人工智能</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6955531"><label class="task-list-item-label" for="task-item-6955531"> 惊天魔盗团 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9468555"><label class="task-list-item-label" for="task-item-9468555"> 大圣归来</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3515745"><label class="task-list-item-label" for="task-item-3515745"> 马达加斯加的企鹅 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5732275"><label class="task-list-item-label" for="task-item-5732275"> 狮子王</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7116263"><label class="task-list-item-label" for="task-item-7116263"> 百万富翁</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8795326"><label class="task-list-item-label" for="task-item-8795326"> 驯龙高手 1、2、3</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3785045"><label class="task-list-item-label" for="task-item-3785045"> 怪物史莱克 1、2、3、4</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7804705"><label class="task-list-item-label" for="task-item-7804705"> 机器管家</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2553559"><label class="task-list-item-label" for="task-item-2553559"> 返老还童</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6474151"><label class="task-list-item-label" for="task-item-6474151"> 飞屋环游记</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7350548"><label class="task-list-item-label" for="task-item-7350548"> 像素大战</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2056636"><label class="task-list-item-label" for="task-item-2056636"> 蚁人</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6563423"><label class="task-list-item-label" for="task-item-6563423"> 侏罗纪公园</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4431401"><label class="task-list-item-label" for="task-item-4431401"> 憨豆特工</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6526585"><label class="task-list-item-label" for="task-item-6526585"> 憨豆的黄金周</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8457158"><label class="task-list-item-label" for="task-item-8457158"> 玛丽与马克思</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-87791"><label class="task-list-item-label" for="task-item-87791"> 海上钢琴师</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2711848"><label class="task-list-item-label" for="task-item-2711848"> 功夫之王</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7415111"><label class="task-list-item-label" for="task-item-7415111"> 四大名捕</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4265521"><label class="task-list-item-label" for="task-item-4265521"> 天下无贼</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-425967"><label class="task-list-item-label" for="task-item-425967"> 那些年我们一起追过的女孩</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9143939"><label class="task-list-item-label" for="task-item-9143939"> 功夫</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9413447"><label class="task-list-item-label" for="task-item-9413447"> 长江7号</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1546228"><label class="task-list-item-label" for="task-item-1546228"> 后天</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1944880"><label class="task-list-item-label" for="task-item-1944880"> 2012</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7481028"><label class="task-list-item-label" for="task-item-7481028"> 我是传奇</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2952226"><label class="task-list-item-label" for="task-item-2952226"> 超人汉考克</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2394755"><label class="task-list-item-label" for="task-item-2394755"> 哥斯拉</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3293794"><label class="task-list-item-label" for="task-item-3293794"> 暮光之城 1、2、3、4 破晓上、4 破晓下</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2858933"><label class="task-list-item-label" for="task-item-2858933"> 风之谷</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9487479"><label class="task-list-item-label" for="task-item-9487479"> 叶问 1、2、3、4</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8392751"><label class="task-list-item-label" for="task-item-8392751"> 海绵宝宝历险记</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6899153"><label class="task-list-item-label" for="task-item-6899153"> 十月围城</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5806274"><label class="task-list-item-label" for="task-item-5806274"> 一代宗师</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7444679"><label class="task-list-item-label" for="task-item-7444679"> 师父</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7153990"><label class="task-list-item-label" for="task-item-7153990"> 镖门</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6815337"><label class="task-list-item-label" for="task-item-6815337"> 极速蜗牛</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9459743"><label class="task-list-item-label" for="task-item-9459743"> 史蒂夫乔布斯</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7048799"><label class="task-list-item-label" for="task-item-7048799"> 乔布斯传</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9667452"><label class="task-list-item-label" for="task-item-9667452"> 疯狂动物城</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5952037"><label class="task-list-item-label" for="task-item-5952037"> 美人鱼</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6038170"><label class="task-list-item-label" for="task-item-6038170"> 楚门的世界</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8605760"><label class="task-list-item-label" for="task-item-8605760"> 雷蒙-斯尼奇的不幸历险</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-708587"><label class="task-list-item-label" for="task-item-708587"> 机械姬</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1791463"><label class="task-list-item-label" for="task-item-1791463"> 拯救大兵瑞恩</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1421089"><label class="task-list-item-label" for="task-item-1421089"> 入殓师</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6029064"><label class="task-list-item-label" for="task-item-6029064"> 盗走达芬奇</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3253897"><label class="task-list-item-label" for="task-item-3253897"> 蝴蝶效应 1、2、3</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4722821"><label class="task-list-item-label" for="task-item-4722821"> 偷天换日</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6863542"><label class="task-list-item-label" for="task-item-6863542"> 十二只猴子</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5983358"><label class="task-list-item-label" for="task-item-5983358"> 星际穿越</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4450451"><label class="task-list-item-label" for="task-item-4450451"> 死侍 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6197759"><label class="task-list-item-label" for="task-item-6197759"> 异邦人-无皇刃谭</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4231917"><label class="task-list-item-label" for="task-item-4231917"> 饥饿游戏 1</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-904"><label class="task-list-item-label" for="task-item-904"> 机械心（法国）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1320805"><label class="task-list-item-label" for="task-item-1320805"> 怪兽大学</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2660971"><label class="task-list-item-label" for="task-item-2660971"> 美国队长 3</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4681707"><label class="task-list-item-label" for="task-item-4681707"> 神战 - 权利之眼</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1440866"><label class="task-list-item-label" for="task-item-1440866"> 心灵捕手</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2133675"><label class="task-list-item-label" for="task-item-2133675"> 头文字D剧场版-梦现</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8726937"><label class="task-list-item-label" for="task-item-8726937"> 哆啦A梦-伴我同行</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6597436"><label class="task-list-item-label" for="task-item-6597436"> BAT MAN VS SUPER MAN</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5280719"><label class="task-list-item-label" for="task-item-5280719"> 鲁滨逊漂流记</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6871209"><label class="task-list-item-label" for="task-item-6871209"> 泰迪熊 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5796161"><label class="task-list-item-label" for="task-item-5796161"> 爱宠大机密</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9360453"><label class="task-list-item-label" for="task-item-9360453"> 生化危机 1 - 变种生还</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9700145"><label class="task-list-item-label" for="task-item-9700145"> 生化危机 2 - 启示录</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1870972"><label class="task-list-item-label" for="task-item-1870972"> 生化危机 3 - 灭绝</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7114638"><label class="task-list-item-label" for="task-item-7114638"> 生化危机 4 - 战神再生</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-291552"><label class="task-list-item-label" for="task-item-291552"> 生化危机 5 - 惩罚</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1145567"><label class="task-list-item-label" for="task-item-1145567"> 生化危机 6 - 终章</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-19812"><label class="task-list-item-label" for="task-item-19812"> 生化危机-恶化</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6897289"><label class="task-list-item-label" for="task-item-6897289"> 这个杀手不太冷</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3549109"><label class="task-list-item-label" for="task-item-3549109"> 生化危机-诅咒</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4269788"><label class="task-list-item-label" for="task-item-4269788"> 茱莉亚的眼睛</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3893888"><label class="task-list-item-label" for="task-item-3893888"> 你的名字</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6923933"><label class="task-list-item-label" for="task-item-6923933"> 秒速五厘米</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-464284"><label class="task-list-item-label" for="task-item-464284"> 机械师 2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3710135"><label class="task-list-item-label" for="task-item-3710135"> 佩小姐的奇幻城堡</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1393615"><label class="task-list-item-label" for="task-item-1393615"> 猫的报恩</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9676596"><label class="task-list-item-label" for="task-item-9676596"> 权力的游戏</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4201093"><label class="task-list-item-label" for="task-item-4201093"> 杀戮都市 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2139546"><label class="task-list-item-label" for="task-item-2139546"> 热血高校 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6570358"><label class="task-list-item-label" for="task-item-6570358"> 言叶之庭</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2456165"><label class="task-list-item-label" for="task-item-2456165"> 加勒比海盗 1、2、3、4、5</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7316495"><label class="task-list-item-label" for="task-item-7316495"> 萤火虫之墓</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9816698"><label class="task-list-item-label" for="task-item-9816698"> 变形金刚 1、2、3、4、5</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-410265"><label class="task-list-item-label" for="task-item-410265"> 当幸福来敲门</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4864507"><label class="task-list-item-label" for="task-item-4864507"> 少年派的奇幻漂流</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1706455"><label class="task-list-item-label" for="task-item-1706455"> 美丽心灵</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8016625"><label class="task-list-item-label" for="task-item-8016625"> 序列之争</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-300954"><label class="task-list-item-label" for="task-item-300954"> 凉宫春日的消失</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2989091"><label class="task-list-item-label" for="task-item-2989091"> 境界的彼方-未来篇</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1342041"><label class="task-list-item-label" for="task-item-1342041"> 菊次郎的夏天</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7622588"><label class="task-list-item-label" for="task-item-7622588"> 环太平洋 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9533604"><label class="task-list-item-label" for="task-item-9533604"> 轻音少女剧场版</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8638373"><label class="task-list-item-label" for="task-item-8638373"> 玉子的爱情故事</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5519907"><label class="task-list-item-label" for="task-item-5519907"> 寻梦环游记</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4243148"><label class="task-list-item-label" for="task-item-4243148"> 明日边缘</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1608805"><label class="task-list-item-label" for="task-item-1608805"> 土拨鼠之日</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9992591"><label class="task-list-item-label" for="task-item-9992591"> 魁拔 1 - 十万火急</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6151821"><label class="task-list-item-label" for="task-item-6151821"> 魁拔 2 - 大战元泱界</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3990954"><label class="task-list-item-label" for="task-item-3990954"> 魁拔 3 - 战神崛起</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7770058"><label class="task-list-item-label" for="task-item-7770058"> 英伦对决</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3151818"><label class="task-list-item-label" for="task-item-3151818"> 奇幻森林</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7647623"><label class="task-list-item-label" for="task-item-7647623"> 唐人街探案 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8491206"><label class="task-list-item-label" for="task-item-8491206"> 电锯惊魂 1、8</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4447384"><label class="task-list-item-label" for="task-item-4447384"> 艺伎回忆录</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2430147"><label class="task-list-item-label" for="task-item-2430147"> 猫汤</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3766442"><label class="task-list-item-label" for="task-item-3766442"> 伊豆的舞女</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5442040"><label class="task-list-item-label" for="task-item-5442040"> 神鞭</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6826201"><label class="task-list-item-label" for="task-item-6826201"> 达芬奇密码</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8861256"><label class="task-list-item-label" for="task-item-8861256"> 哈利波特 1 - 魔法师</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3903348"><label class="task-list-item-label" for="task-item-3903348"> 哈利波特 2 - 密室</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7914420"><label class="task-list-item-label" for="task-item-7914420"> 西虹市首富</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4236652"><label class="task-list-item-label" for="task-item-4236652"> 奇异博士</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2145906"><label class="task-list-item-label" for="task-item-2145906"> 失恋 33 天</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6545057"><label class="task-list-item-label" for="task-item-6545057"> 情书</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8048991"><label class="task-list-item-label" for="task-item-8048991"> 朝花夕誓</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5282980"><label class="task-list-item-label" for="task-item-5282980"> 风雨哈佛路</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9123699"><label class="task-list-item-label" for="task-item-9123699"> 飓风营救</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9779279"><label class="task-list-item-label" for="task-item-9779279"> 摩天营救</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7762104"><label class="task-list-item-label" for="task-item-7762104"> 摄影机不要停</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9623598"><label class="task-list-item-label" for="task-item-9623598"> 阿尔法-狼伴归途</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1861254"><label class="task-list-item-label" for="task-item-1861254"> 疯狂的麦克斯 1、4</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4029495"><label class="task-list-item-label" for="task-item-4029495"> 流浪地球</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4884733"><label class="task-list-item-label" for="task-item-4884733"> 海王</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4685333"><label class="task-list-item-label" for="task-item-4685333"> 特种部队 2 - 全面反击</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6570010"><label class="task-list-item-label" for="task-item-6570010"> 白蛇缘起</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2675131"><label class="task-list-item-label" for="task-item-2675131"> 花牌情缘 上之句</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2541397"><label class="task-list-item-label" for="task-item-2541397"> 花牌情缘 下之句</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-460243"><label class="task-list-item-label" for="task-item-460243"> 神探夏洛克</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9504899"><label class="task-list-item-label" for="task-item-9504899"> 惊奇队长</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4067930"><label class="task-list-item-label" for="task-item-4067930"> X 战警</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8443280"><label class="task-list-item-label" for="task-item-8443280"> 银河护卫队 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4327375"><label class="task-list-item-label" for="task-item-4327375"> 帕丁顿熊 2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9998983"><label class="task-list-item-label" for="task-item-9998983"> 复仇者联盟 1、2、3、4</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1129577"><label class="task-list-item-label" for="task-item-1129577"> 阿丽塔</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3845822"><label class="task-list-item-label" for="task-item-3845822"> 蜘蛛侠 - 英雄远征</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8760703"><label class="task-list-item-label" for="task-item-8760703"> 哪吒之魔童降世</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1848935"><label class="task-list-item-label" for="task-item-1848935"> 中国机长</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4375679"><label class="task-list-item-label" for="task-item-4375679"> 天气之子</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-220834"><label class="task-list-item-label" for="task-item-220834"> 生死狙击</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9126886"><label class="task-list-item-label" for="task-item-9126886"> 星际探索</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3956927"><label class="task-list-item-label" for="task-item-3956927"> 猩球崛起</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7637007"><label class="task-list-item-label" for="task-item-7637007"> 全民风暴</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7564917"><label class="task-list-item-label" for="task-item-7564917"> 忍者神龟-变种时代</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3942256"><label class="task-list-item-label" for="task-item-3942256"> 荒野猎人</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9933108"><label class="task-list-item-label" for="task-item-9933108"> 调音师</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8109759"><label class="task-list-item-label" for="task-item-8109759"> 忍者神龟 2 - 破影而出 2020年4月25日星期六</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9728759"><label class="task-list-item-label" for="task-item-9728759"> 灭绝 - 烂片</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6631029"><label class="task-list-item-label" for="task-item-6631029"> Hello World</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2264892"><label class="task-list-item-label" for="task-item-2264892"> 黑金</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-478746"><label class="task-list-item-label" for="task-item-478746"> 灵魂摆渡</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5490834"><label class="task-list-item-label" for="task-item-5490834"> 画壁</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4531909"><label class="task-list-item-label" for="task-item-4531909"> 诸神之怒</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5885988"><label class="task-list-item-label" for="task-item-5885988"> 诸神之战 2020年7月11日星期六</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7263836"><label class="task-list-item-label" for="task-item-7263836"> X 特遣队</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9660337"><label class="task-list-item-label" for="task-item-9660337"> 王牌特工 2 黄金圈 2020年10月1日星期四</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-2355609"><label class="task-list-item-label" for="task-item-2355609"> 王牌特工 1 特工学院 2020年10月1日星期四</label></li>
</ul>
<h2 id="待看">待看</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8320202"><label class="task-list-item-label" for="task-item-8320202"> 幽灵公主</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2131652"><label class="task-list-item-label" for="task-item-2131652"> 种下星星的日子</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8895330"><label class="task-list-item-label" for="task-item-8895330"> 蜘蛛侠-英雄归来</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7661579"><label class="task-list-item-label" for="task-item-7661579"> 匆匆那年</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7563046"><label class="task-list-item-label" for="task-item-7563046"> 泰坦尼克号</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9149427"><label class="task-list-item-label" for="task-item-9149427"> 罗马假日</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-254957"><label class="task-list-item-label" for="task-item-254957"> 红猪</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9593836"><label class="task-list-item-label" for="task-item-9593836"> 侧耳倾听</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1817956"><label class="task-list-item-label" for="task-item-1817956"> 小美人鱼</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1245414"><label class="task-list-item-label" for="task-item-1245414"> 玩具总动员</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3271460"><label class="task-list-item-label" for="task-item-3271460"> 怪兽大战外星人</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6735721"><label class="task-list-item-label" for="task-item-6735721"> 料理鼠王</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3707319"><label class="task-list-item-label" for="task-item-3707319"> ET</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8433748"><label class="task-list-item-label" for="task-item-8433748"> 硅谷传奇</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6401227"><label class="task-list-item-label" for="task-item-6401227"> 卧虎藏龙</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-346527"><label class="task-list-item-label" for="task-item-346527"> 阿凡达 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6256386"><label class="task-list-item-label" for="task-item-6256386"> 冰河世纪</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7936341"><label class="task-list-item-label" for="task-item-7936341"> 疯狂原始人</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3284969"><label class="task-list-item-label" for="task-item-3284969"> 守护者联盟</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1583754"><label class="task-list-item-label" for="task-item-1583754"> 贫民窟的百万富翁</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6110968"><label class="task-list-item-label" for="task-item-6110968"> 银翼杀手</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8045576"><label class="task-list-item-label" for="task-item-8045576"> 彗星来的那一夜</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9595512"><label class="task-list-item-label" for="task-item-9595512"> 希特勒的名单</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1319866"><label class="task-list-item-label" for="task-item-1319866"> 十二怒汉</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8960802"><label class="task-list-item-label" for="task-item-8960802"> 异次元骇客</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3074333"><label class="task-list-item-label" for="task-item-3074333"> 感官游戏</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7833027"><label class="task-list-item-label" for="task-item-7833027"> 冒名顶替</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-121602"><label class="task-list-item-label" for="task-item-121602"> 无姓之人</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7504127"><label class="task-list-item-label" for="task-item-7504127"> 香草的天空</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3951463"><label class="task-list-item-label" for="task-item-3951463"> 星际迷航</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7094599"><label class="task-list-item-label" for="task-item-7094599"> 独立日</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5578346"><label class="task-list-item-label" for="task-item-5578346"> 荒野猎人</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5019305"><label class="task-list-item-label" for="task-item-5019305"> 第三种爱情</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8810090"><label class="task-list-item-label" for="task-item-8810090"> 拉登日记</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5156583"><label class="task-list-item-label" for="task-item-5156583"> 乱世佳人</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9090623"><label class="task-list-item-label" for="task-item-9090623"> 苔丝</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9548615"><label class="task-list-item-label" for="task-item-9548615"> 霸王别姬</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1052942"><label class="task-list-item-label" for="task-item-1052942"> 美丽人生</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5495418"><label class="task-list-item-label" for="task-item-5495418"> 三傻大闹宝莱坞</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7213535"><label class="task-list-item-label" for="task-item-7213535"> 放牛班的春天</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5515458"><label class="task-list-item-label" for="task-item-5515458"> 怦然心动</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5529414"><label class="task-list-item-label" for="task-item-5529414"> V字仇杀队</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7367419"><label class="task-list-item-label" for="task-item-7367419"> 被嫌弃的松子的一生</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7194994"><label class="task-list-item-label" for="task-item-7194994"> 穿越时空的少女</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1253101"><label class="task-list-item-label" for="task-item-1253101"> 荒野生存</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4750425"><label class="task-list-item-label" for="task-item-4750425"> 叛逆的物语</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4298492"><label class="task-list-item-label" for="task-item-4298492"> 沉默的羔羊</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3263629"><label class="task-list-item-label" for="task-item-3263629"> 控方证人</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6897776"><label class="task-list-item-label" for="task-item-6897776"> 锅匠 裁缝 士兵 间谍（Tinker Tailor Soldier Spy）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2861386"><label class="task-list-item-label" for="task-item-2861386"> 第六感</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1143842"><label class="task-list-item-label" for="task-item-1143842"> 傲慢与偏见</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5670906"><label class="task-list-item-label" for="task-item-5670906"> 刺客联盟</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9494954"><label class="task-list-item-label" for="task-item-9494954"> 末日崩塌</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7897269"><label class="task-list-item-label" for="task-item-7897269"> 隧道</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2229731"><label class="task-list-item-label" for="task-item-2229731"> 感冒</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7699805"><label class="task-list-item-label" for="task-item-7699805"> 铁线虫入侵</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7788313"><label class="task-list-item-label" for="task-item-7788313"> 恐怖直播</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7197514"><label class="task-list-item-label" for="task-item-7197514"> 万物理论</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2792647"><label class="task-list-item-label" for="task-item-2792647"> 社交网络</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5539525"><label class="task-list-item-label" for="task-item-5539525"> 缩小人生</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5012040"><label class="task-list-item-label" for="task-item-5012040"> 地球停转之日</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7112283"><label class="task-list-item-label" for="task-item-7112283"> 恋空</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6070047"><label class="task-list-item-label" for="task-item-6070047"> 黑镜</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3285970"><label class="task-list-item-label" for="task-item-3285970"> 死亡诗社</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7962449"><label class="task-list-item-label" for="task-item-7962449"> 和莎莫的 500 天</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6434506"><label class="task-list-item-label" for="task-item-6434506"> 饮食男女</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4367920"><label class="task-list-item-label" for="task-item-4367920"> 我是大哥大</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9069196"><label class="task-list-item-label" for="task-item-9069196"> 星运里的错</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5115059"><label class="task-list-item-label" for="task-item-5115059"> 突袭</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4100805"><label class="task-list-item-label" for="task-item-4100805"> 无敌破坏王 1</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3197009"><label class="task-list-item-label" for="task-item-3197009"> 无敌破坏王 2 - 大闹互联网</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-365998"><label class="task-list-item-label" for="task-item-365998"> 回到未来</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6076900"><label class="task-list-item-label" for="task-item-6076900"> 刺客信条</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2956409"><label class="task-list-item-label" for="task-item-2956409"> 死亡笔记</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5364885"><label class="task-list-item-label" for="task-item-5364885"> 金田一</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1309109"><label class="task-list-item-label" for="task-item-1309109"> 安德的游戏</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7207886"><label class="task-list-item-label" for="task-item-7207886"> 最终幻想</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3716371"><label class="task-list-item-label" for="task-item-3716371"> 阿拉丁神灯</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6874772"><label class="task-list-item-label" for="task-item-6874772"> 木乃伊</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3724135"><label class="task-list-item-label" for="task-item-3724135"> 国家宝藏</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4586655"><label class="task-list-item-label" for="task-item-4586655"> 博物馆奇妙夜</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3609357"><label class="task-list-item-label" for="task-item-3609357"> 舞出我人生</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5682645"><label class="task-list-item-label" for="task-item-5682645"> 赌博默示录 1、2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-377591"><label class="task-list-item-label" for="task-item-377591"> 超体</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8927500"><label class="task-list-item-label" for="task-item-8927500"> 蓝色大海的传说</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4523483"><label class="task-list-item-label" for="task-item-4523483"> 来自星星的你</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6799479"><label class="task-list-item-label" for="task-item-6799479"> 巨额来电</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3224940"><label class="task-list-item-label" for="task-item-3224940"> 二代妖精</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2951755"><label class="task-list-item-label" for="task-item-2951755"> 可可西里的美丽传说</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8678830"><label class="task-list-item-label" for="task-item-8678830"> 信条</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8683126"><label class="task-list-item-label" for="task-item-8683126"> 摩天大楼</label></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[正则表达式总结.md]]></title>
        <id>http://blog.kuranado.com/post/zheng-ze-biao-da-shi-zong-jie-md/</id>
        <link href="http://blog.kuranado.com/post/zheng-ze-biao-da-shi-zong-jie-md/">
        </link>
        <updated>2020-10-01T00:59:20.000Z</updated>
        <content type="html"><![CDATA[<h2 id="基本">基本</h2>
<ul>
<li>正则表达式区分字母大小写</li>
<li><code>.</code> 字符可以匹配<strong>任意</strong>单个字符、字母、数字、空格甚至是 <code>.</code> 字符本身。但在绝大多数正则表达式实现里，<code>.</code> 不能匹配换行符</li>
<li><code>\</code> 用于转义</li>
<li><code>\.</code> 匹配字符 <code>.</code> 本身</li>
<li><code>\\</code> 匹配字符 <code>\</code></li>
</ul>
<hr>
<h2 id="字符区间">字符区间</h2>
<ul>
<li><code>[abc]</code> 匹配字符 <code>a</code> 或 <code>b</code> 或 <code>c</code>，</li>
<li><code>[0-9]</code> 等价于 <code>[0123456789]</code></li>
<li><code>[a-z]</code> 等价于 <code>[abcdefghijklmnopqrstuvwxyz]</code>，<code>[A-Z]</code> 等价于 <code>[ABCDEFGHIJKLMNOPQRSTUVWXYZ]</code>，<code>[A-z]</code> 等价于 <code>[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]</code>（按照 Ascii 顺序），<code>[A-Za-z0-9]</code> 等价于 <code>[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789]</code></li>
</ul>
<blockquote>
<p>很多程序员喜欢把一个字符也定义为一个字符区间，如 <code>[a]</code> 等价于 <code>a</code>，<code>[\r]?</code> 等价于 <code>\r?</code>，但前者可以避免产生误解、增加可读性，所以建议一个字符也定义为字符区间</p>
</blockquote>
<hr>
<h2 id="排除">排除</h2>
<ul>
<li><code>[^a-c]</code> 排除 <code>a</code> 或 <code>b</code> 或 <code>c</code></li>
</ul>
<hr>
<h2 id="空白字符">空白字符</h2>
<ul>
<li><code>[\b]</code> 匹配回退（并删除）一个字符（Backspace 键）</li>
<li><code>\f</code> 匹配换页符</li>
<li><code>\r</code> 匹配回车符</li>
<li><code>\n</code> 匹配换行符</li>
<li><code>\t</code> 匹配制表符（Tab 键）</li>
<li><code>\v</code> 匹配垂直制表符</li>
</ul>
<blockquote>
<p>在 Unix 或 Linux 上使用 <code>\n</code> 匹配行尾标记，Windows 上使用 <code>\r\n</code> 匹配行尾标记</p>
</blockquote>
<hr>
<h2 id="特定字符类型">特定字符类型</h2>
<ul>
<li><code>\d</code> 匹配任何一个数字字符，等价于 <code>[0-9]</code></li>
<li><code>\D</code> 匹配任何一个<strong>非数字</strong>字符，等价于 <code>[^0-9]</code></li>
<li><code>\w</code> 匹配任何一个字母（大小写均可）或数字类型或下划线字符，等价于 <code>[A-z0-9_]</code></li>
<li><code>\W</code> 匹配任何一个<strong>非字母（大小写均可）或数字类型或下划线字符</strong>，等价于 <code>[^A-z0-9_]</code></li>
<li><code>\s</code> 匹配任何一个空白字符，等价于 <code>[\f\r\n\t\v ]</code>，注意包含空格</li>
<li><code>\S</code> 匹配任何一个非空白字符，等价于 <code>[^\f\r\n\t\v ]</code></li>
</ul>
<hr>
<h2 id="转义">转义</h2>
<ul>
<li><code>.</code>、<code>[</code>、<code>]</code>、<code>\</code>、<code>+</code>、<code>*</code>、<code>?</code>、<code>(</code>、<code>)</code> 等具有特殊含义的符号被称为<strong>元字符</strong>，如果要匹配元字符，则需要对元字符进行转义，如 <code>\.</code> 匹配字符 <code>.</code>，<code>\[</code> 匹配字符 <code>[</code>，<code>\]</code> 匹配字符 <code>]</code>，<code>\\</code> 匹配字符 <code>\</code></li>
<li><code>/</code> 字符并不是元字符，在绝大多数正则表达式解析器中如果要匹配字符 <code>/</code> 并不需要转义，但有些解析器却要求必须转义才能够匹配，所以建议总是在需要匹配字符 <code>/</code> 时对其进行转义，即使用 <code>\/</code> 匹配字符 <code>/</code>，这样在所有解析器中都能够正常工作</li>
<li>像 <code>.</code>、<code>+</code> 这样的元字符出现在字符区间内部时，将会被解释为普通字符，可以不用转义，如 <code>[\w\.]</code> 等价于 <code>[\w.]</code>，但为了防止误解，建议显示转义</li>
</ul>
<hr>
<h2 id="重复匹配">重复匹配</h2>
<ul>
<li><code>+</code> 元字符匹配一个或多个字符，如 <code>a+</code> 匹配一个或多个连续的 <code>a</code>，<code>[0-9]+</code> 匹配一个或多个连续的数字</li>
<li><code>*</code> 元字符匹配 0 个或多个字符</li>
<li><code>?</code> 元字符匹配 0 个或 1 个字符</li>
<li><code>{n}</code> 重复匹配 n 次</li>
<li><code>{m,n}</code> 重复匹配 m ~ n 次，如 <code>{0,1}</code> 表示最少匹配 0 次，最多匹配 1 次，等价于 <code>?</code></li>
<li><code>{m,}</code> 重复匹配至少 m 次</li>
<li><code>*</code> 和 <code>+</code> 是贪婪型元字符，它们会尽可能地从一段文本的开头一致匹配到末尾，而不是碰到一个匹配时就停止，如果想要碰到第一个匹配时就停止，则应该使用元字符对应的懒惰型。<code>*</code> 元字符对应的懒惰型为 <code>*?</code>，<code>+</code> 元字符对应的懒惰型为 <code>+?</code>。如想要匹配 HTML <code>&lt;b&gt;</code> 标签中的文本，贪婪型正则如下：<pre><code>&lt;[Bb]&gt;.*&lt;\/[Bb]&gt;
</code></pre>
但对于如下文本匹配却有问题：<br>
<img src="http://image.kuranado.com/blog/1601514029.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
正确写法是使用懒惰型：<pre><code>&lt;[Bb]&gt;.*?&lt;\/[Bb]&gt;
</code></pre>
匹配结果：<br>
<img src="http://image.kuranado.com/blog/1601514040.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></li>
</ul>
<blockquote>
<p>在为字符区间加后缀的时候，必须把后缀放到区间外面，如 <code>[0-9]+</code> 是正确的，而 <code>[0-9+]</code> 是错误的，同理 <code>[0-9]*</code>、<code>[0-9]?</code> 是正确的，而 <code>[0-9*]</code>、<code>[0-9?]</code> 是错误的<br>
注意 <code>{m,n}</code> 是正确的，<code>{m, n}</code> 是不正确的，因为个人习惯在英文 <code>,</code> 后加一个空格，但在使用此正则时需要注意避免</p>
</blockquote>
<hr>
<h2 id="位置匹配">位置匹配</h2>
<ul>
<li><code>\b</code> 表示边界（boundary），匹配<strong>单词</strong>的开头或结尾。这里所谓的单词是指能够被 <code>\w</code> 匹配的内容即称为单词，<code>\b</code> 匹配的时字符之间的一个位置：一边是单词（能够被 <code>\w</code> 所匹配的），一边是其它内容（能够被 <code>\W</code> 所匹配的）。<code>b</code> 匹配的是一个位置，而不是任何实际字符</li>
<li><code>\B</code> 不匹配单词边界</li>
<li><code>^</code> 匹配字符串开头位置。<code>^</code> 用于字符区间中表示排除，如 <code>[^abc]</code> <code>[^a-c]</code> 排除 <code>a</code> 或 <code>b</code> 或 <code>c</code>，但当 <code>^</code> 用于字符区间之外时，则表示匹配字符串的起始位置</li>
<li><code>$</code> 匹配字符串结尾位置</li>
<li><code>(?m)</code> 用于开启多行模式，<code>(?m)</code> 必须出现在整个模式的最前面，但实际包括 JavaScript 在内的许多正则表达式都不支持 <code>(?m)</code></li>
</ul>
<hr>
<h2 id="子表达式">子表达式</h2>
<ul>
<li>前面介绍的重复匹配只作用于紧挨着它的前一个字符或元字符，为了能够重复匹配多个字符，需要使用子表达式</li>
<li>子表达式必须出现在元字符 <code>(</code> 和 <code>)</code> 之间</li>
<li>对于不需要使用子表达式的地方，如果加上元字符 <code>(</code> 和 <code>)</code> 使其成为子表达式，虽然对匹配结果不会有任何影响，但可能会影响性能，如把 <code>\d{1,3}</code> 如果写成子表达式：<code>(\d{1,3})</code>，匹配结果完全一样，但后者可能会影响性能</li>
<li>因为模式是从左到右进行评估的，首先测试第一个，然后测试第二个，只要有任何一个模式匹配，就不再测试选择结构中的其它模式。比如 IP 地址的匹配：<br>
IP 地址范围为 0.0.0.0 ~ 255.255.255.255，总结如下：
<ol>
<li>任意的 1 位或 2 位数字</li>
<li>任意的以 1 开头的 3 位数字</li>
<li>任意的以 2 开头，第二位数字在 0 到 4 之间的 3 位数字</li>
<li>任意的以 25 开头，第三位数字在 0 到 5 之间的 3 位数字<br>
很容易写出如下正则：</li>
</ol>
<pre><code>(((\d{1,2})|(1\d{2})|(2[0-4]\d)|(25[0-5]))\.){3}((\d{1,2})|(1\d{2})|(2[0-4]\d)|(25[0-5]))
</code></pre>
但这个正则却是错误的，如 IP 地址：<code>12.159.46.200</code> 的匹配结果如下图，最后的 0 无法被匹配，这是因为 <code>20</code> 已经被子表达式 <code>(\d{1, 2})</code> 匹配，并没有被 <code>(25[0-5])</code> 匹配<br>
<img src="http://image.kuranado.com/blog/1601514063.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
正确的写法如下：<pre><code>((((25[0-5])\d)|(2[0-4]\d)|(1\d{2})|(\d{1,2}))\.){3}(((25[0-5])\d)|(2[0-4]\d)|(1\d{2})|(\d{1,2}))
</code></pre>
匹配结果：<br>
<img src="http://image.kuranado.com/blog/1601514071.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></li>
</ul>
<hr>
<h2 id="反向引用">反向引用</h2>
<ul>
<li>
<p>反向引用允许正则表达式模式引用之前匹配的结果，如想要匹配所有的 HTML 标题，正则如下：</p>
<pre><code>(&lt;[Hh]1&gt;.*?&lt;\/[Hh]1&gt;)|(&lt;[Hh]2&gt;.*?&lt;\/[Hh]2&gt;)|(&lt;[Hh]3&gt;.*?&lt;\/[Hh]3&gt;)|(&lt;[Hh]4&gt;.*?&lt;\/[Hh]4&gt;)|(&lt;[Hh]5&gt;.*?&lt;\/[Hh]5&gt;)|(&lt;[Hh]6&gt;.*?&lt;\/[Hh]6&gt;)
</code></pre>
<p>匹配结果也的确是正确的：<br>
<img src="http://image.kuranado.com/blog/1601514090.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
但是这样写未免过于臃肿，所以有人可能会这样写：</p>
<pre><code>&lt;[Hh][1-6]&gt;.*?&lt;\/[Hh][1-6]&gt; 
</code></pre>
<p>但实际这却是错误的，因为他会将 <code>&lt;h2&gt;</code> 和 <code>&lt;/h3&gt;</code> 匹配到一块，而这是错误的 HTML 标题：       <img src="http://image.kuranado.com/blog/1601514113.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></p>
<p>正确的写法是使用反向引用：</p>
<pre><code>&lt;[Hh]([1-6])&gt;.*?&lt;\/[Hh]\1&gt;
</code></pre>
<p>匹配结果：<br>
<img src="http://image.kuranado.com/blog/1601514136.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
使用了 <code>\1</code> 引用了第 1 个子表达式 <code>([1-6])</code>，如果有第 2 个、第 3 个等子表达式，则使用 <code>\2</code>、<code>\3</code> 引用</p>
</li>
<li>
<p>反向引用只能引用括号里的子表达式</p>
</li>
<li>
<p>不同的正则实现中，反向引用的语法存在很大差异，如 JavaScript 和 vim 在搜索时使用 <code>\</code> 标识反向引用，在替换时使用 <code>$</code> 标识反向引用，Perl 搜索和替换都使用 <code>$</code> 标识反向引用</p>
</li>
</ul>
<hr>
<h2 id="反向引用替换">反向引用替换</h2>
<ul>
<li>如将文档中的所有邮箱地址全替换为 HTML 链接
<ol>
<li>先写出正则表达式，找出所有的邮箱地址，为了能够使用反向引用，加 <code>(</code> 和 <code>)</code> 让其变成子表达式：<pre><code>(\w+[\w\.]*@[\w\.]+\.\w+)
</code></pre>
</li>
<li>编写替换的表达式：<pre><code>&lt;a href=&quot;mailto:$1&quot;&gt;$1&lt;/a&gt;
</code></pre>
</li>
<li>开始替换，可以使用编程语言，如 JavaScript，这里简单直接以 VsCode 操作为例（注意要选择正则表达式模式）：<br>
<img src="http://image.kuranado.com/blog/1601514160.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"><br>
点击替换按钮，替换结果如下：<br>
<img src="http://image.kuranado.com/blog/1601514172.png?imageMogr2/thumbnail/!70p" alt="" loading="lazy"></li>
</ol>
</li>
<li>反向引用替换大小写转换（并不是所有正则表达式实现都支持）：
<ul>
<li><code>\U</code> 把 <code>\U</code> 到 <code>\E</code> 之间的字符全部转换为大写</li>
<li><code>\L</code> 把 <code>\L</code> 到 <code>\E</code> 之间的字符全部转换为小写</li>
<li><code>\E</code> 结束 <code>\U</code> 或 <code>\L</code> 转换</li>
<li><code>u</code> 把下一个字符转换为大写</li>
<li><code>l</code> 把下一个字符转换为小写</li>
</ul>
</li>
</ul>
<hr>
<h2 id="环视">环视</h2>
<ul>
<li><code>?=</code> 表示向前查看，如：<code>?=:</code> 匹配字符 <code>:</code> 但不消耗字符 <code>:</code>，所谓的不消耗是指匹配到的 <code>:</code> 不会在最终的匹配结果中返回。如对于如下文本：<pre><code>http://www.baidu.com
</code></pre>
表达式 <code>http:</code> 匹配 <code>http:</code>，而如果使用向前查看，表达式为：<code>http(?=:)</code>，匹配结果为：<code>http</code>，不包含字符 <code>:</code></li>
<li><code>?&lt;=</code> 表示向后查看，如：<code>?&lt;=\$</code> 匹配字符 <code>$</code>，但不消耗字符 <code>$</code>，如对于如下文本：<pre><code>ABC01: $253.00
</code></pre>
表达式 <code>\$[\d\.]+\d{2}</code> 匹配 <code>$253.00</code>，而如果使用向后查看，表达式为：<code>(?&lt;=\$)[\d\.]+\d{2}</code>，匹配结果为：<code>253.00</code>，不包含字符 <code>$</code></li>
<li>向前查看和向后查看的否定式分别为：<code>?!</code> 和 <code>?&lt;!</code>，即将肯定式中的 <code>=</code> 换成 <code>!</code></li>
</ul>
<blockquote>
<p>所有主流正则表达式实现都支持向前查看，但有些语言不支持向后查看，如 JavaScript</p>
</blockquote>
<hr>
<h2 id="正则测试网站">正则测试网站</h2>
<ul>
<li><a href="https://regex101.com/">https://regex101.com/</a></li>
<li><a href="https://www.regextester.com/">https://www.regextester.com/</a></li>
</ul>
<hr>
<h2 id="参考">参考</h2>
<ul>
<li>《正则表达式必知必会修订版》</li>
</ul>
]]></content>
    </entry>
</feed>